From: "Saved by Windows Internet Explorer 8"
Subject: tuxgraphics.org: Tuxgraphics AVR C-programming tutorial
Date: Mon, 1 Mar 2010 22:11:21 +0530
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01CAB98C.1FFF1050"
X-MimeOLE: Produced By Microsoft MimeOLE V6.1.7600.16385

This is a multi-part message in MIME format.

------=_NextPart_000_0000_01CAB98C.1FFF1050
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>tuxgraphics.org: Tuxgraphics AVR C-programming =
tutorial</TITLE>
<META content=3D"text/html; charset=3Diso-8859-1" =
http-equiv=3DContent-Type>
<META name=3DGENERATOR content=3D"MSHTML 8.00.7600.16490">
<META name=3DLFCATEGORY content=3DHardware><LINK rel=3D"shortcut icon"=20
type=3Dimage/x-icon href=3D"../../favicon.ico">
<STYLE type=3Dtext/css>TD.box {
	BORDER-BOTTOM: #888 1px solid; BORDER-LEFT: #888 1px solid; BORDER-TOP: =
#888 1px solid; BORDER-RIGHT: #888 1px solid
}
TD.top {
	FONT-FAMILY: Arial,Geneva,Verdana,Helvetica,sans-serif; FONT-SIZE: 12px
}
PRE {
	FONT-FAMILY: monospace,Courier
}
PRE.code {
	BACKGROUND-COLOR: #aedbe8; FONT-FAMILY: monospace,Courier
}
P.cl {
	COLOR: #ee9500
}
TABLE.left {
	MARGIN-RIGHT: 0.3cm
}
A.nodec {
	TEXT-DECORATION: none
}
P.trans {
	TEXT-ALIGN: right; FONT-SIZE: 8pt
}
P.clbox {
	BORDER-BOTTOM: #ffd700; TEXT-ALIGN: center; BORDER-LEFT: #ffd700; =
PADDING-BOTTOM: 0.5cm; BACKGROUND-COLOR: #ffd700; PADDING-LEFT: 0.5cm; =
WIDTH: 50%; PADDING-RIGHT: 0.5cm; BORDER-TOP: #ffd700; BORDER-RIGHT: =
#ffd700; PADDING-TOP: 0.5cm
}
P.code {
	BORDER-BOTTOM: #aedbe8; TEXT-ALIGN: left; BORDER-LEFT: #aedbe8; =
PADDING-BOTTOM: 0.1cm; BACKGROUND-COLOR: #aedbe8; PADDING-LEFT: 0.1cm; =
WIDTH: 80%; PADDING-RIGHT: 0.1cm; BORDER-TOP: #aedbe8; BORDER-RIGHT: =
#aedbe8; PADDING-TOP: 0.1cm
}
P.foot {
	BORDER-BOTTOM: #aaaaaa; TEXT-ALIGN: center; BORDER-LEFT: #aaaaaa; =
PADDING-BOTTOM: 0.5cm; BACKGROUND-COLOR: #aaaaaa; MARGIN-TOP: 0.1cm; =
PADDING-LEFT: 0.5cm; PADDING-RIGHT: 0.5cm; COLOR: #ffffff; MARGIN-LEFT: =
1cm; BORDER-TOP: #aaaaaa; MARGIN-RIGHT: 1cm; BORDER-RIGHT: #aaaaaa; =
PADDING-TOP: 0.5cm
}
DIV.tbbutton {
	BORDER-BOTTOM: #aaa 1px solid; TEXT-ALIGN: center; PADDING-BOTTOM: 2px; =
LINE-HEIGHT: 1.2em; MARGIN: 2px 5px; PADDING-LEFT: 2px; WIDTH: 24em; =
PADDING-RIGHT: 2px; WHITE-SPACE: nowrap; BACKGROUND: #ddd; COLOR: #555; =
FONT-SIZE: 12px; BORDER-RIGHT: #aaa 1px solid; PADDING-TOP: 2px
}
DIV.bbutton {
	BORDER-BOTTOM: #aaa 1px solid; TEXT-ALIGN: center; PADDING-BOTTOM: 2px; =
LINE-HEIGHT: 1.2em; MARGIN: 2px 5px; PADDING-LEFT: 2px; PADDING-RIGHT: =
2px; WHITE-SPACE: nowrap; BACKGROUND: #ddd; FLOAT: left; COLOR: #555; =
FONT-SIZE: 12px; BORDER-RIGHT: #aaa 1px solid; PADDING-TOP: 2px
}
</STYLE>

<STYLE type=3Dtext/css media=3Dprint>#noprint {
	DISPLAY: none
}
</STYLE>

<STYLE type=3Dtext/css media=3D"screen, projection">#printonly {
	DISPLAY: none
}
BODY {
	BACKGROUND-COLOR: #fdf5e6
}
</STYLE>
<!-- parser_add -->
<SCRIPT type=3Dtext/javascript=20
src=3D"http://tuxgraphics.org/lightbox2/js/prototype.js">=0A=
</SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://tuxgraphics.org/lightbox2/js/scriptaculous.js?load=3Deffect=
s">=0A=
 =0A=
</SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://tuxgraphics.org/lightbox2/js/lightbox.js">=0A=
 =0A=
</SCRIPT>
<LINK rel=3Dstylesheet type=3Dtext/css=20
href=3D"http://tuxgraphics.org/lightbox2/css/lightbox.css" =
media=3Dscreen><!-- end_add --></HEAD>
<BODY text=3D#000000><!-- this is used by a number of tools:=0A=
 =3DLF=3DAUTHOR: Guido Socher=0A=
 =3DLF=3DCAT___: Hardware=0A=
 =3DLF=3DTITLE_: Tuxgraphics AVR C-programming tutorial=0A=
 =3DLF=3DNUMBER: 0=0A=
 =3DLF=3DANAME_: avr-c-programming.shtml=0A=
 =3DLF=3DPARSER: 2.57=0A=
 --><!-- start navegation bar -->
<DIV id=3Dnoprint>
<CENTER><A href=3D"http://tuxgraphics.org/">Home</A>&nbsp;|&nbsp; <A=20
href=3D"http://tuxgraphics.org/electronics/">Electronics</A>&nbsp;|&nbsp;=
 <A=20
href=3D"http://tuxgraphics.org/toolbox/">Toolbox</A>&nbsp;|&nbsp; <A=20
href=3D"http://tuxgraphics.org/giniandkarlsworld/">Gini and Karl's=20
world</A>&nbsp;|&nbsp; <A=20
href=3D"http://tuxgraphics.org/postcard/">E-cards</A>&nbsp;|&nbsp; <A=20
href=3D"http://tuxgraphics.org/photos/">Photos</A>&nbsp;|&nbsp; <A=20
href=3D"http://shop.tuxgraphics.org/">Online-Shop</A> </CENTER></DIV>
<P id=3Dprintonly align=3Dright>http://tuxgraphics.org/electronics </P>
<CENTER>
<HR>
<A href=3D"http://tuxgraphics.org/electronics/"><IMG border=3D0=20
src=3D"http://tuxgraphics.org/electronics/tuxgraphics_icon.jpg" =
width=3D800=20
height=3D151></A> </CENTER><BR clear=3Dall><!-- stop navegation bar -->
<TABLE id=3Dnoprint class=3Dleft border=3D0 summary=3Dtoc width=3D195 =
align=3Dleft>
  <TBODY>
  <TR>
    <TD><!-- INDEX_START --><BR><I>Content</I>:=20
      <UL>
        <LI><A=20
        =
href=3D"http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml=
#0lfindex0">Hardware=20
        becomes software</A>=20
        <LI><A=20
        =
href=3D"http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml=
#0lfindex1">What=20
        are Microcontrollers?</A>=20
        <LI><A=20
        =
href=3D"http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml=
#0lfindex2">What=20
        are AVR microcontrollers?</A>=20
        <LI><A=20
        =
href=3D"http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml=
#0lfindex3">Let's=20
        start with a simple circuit</A>=20
        <LI><A=20
        =
href=3D"http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml=
#0lfindex4">Programming=20
        the microcontroller</A>=20
        <LI><A=20
        =
href=3D"http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml=
#0lfindex5">The=20
        software</A>=20
        <LI><A=20
        =
href=3D"http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml=
#0lfindex6">How=20
        do I compile that code?</A>=20
        <LI><A=20
        =
href=3D"http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml=
#0lfindex7">Help!=20
        Give me an IDE</A>=20
        <LI><A=20
        =
href=3D"http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml=
#0lfindex8">Makefiles</A>=20

        <LI><A=20
        =
href=3D"http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml=
#0lfindex9">What=20
        are Fuses?</A>=20
        <LI><A=20
        =
href=3D"http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml=
#0lfindex10">Debugging</A>=20

        <LI><A=20
        =
href=3D"http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml=
#0lfindex11">Writing=20
        small and efficient code</A>=20
        <LI><A=20
        =
href=3D"http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml=
#0lfindex12">Code=20
        examples</A>=20
        <LI><A=20
        =
href=3D"http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml=
#0lfindex13">Code=20
        examples: Analog to digital conversion</A>=20
        <LI><A=20
        =
href=3D"http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml=
#0lfindex14">Code=20
        examples: Timers</A>=20
        <LI><A=20
        =
href=3D"http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml=
#0lfindex15">Code=20
        examples: LCD displays</A>=20
        <LI><A=20
        =
href=3D"http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml=
#0lfindex16">Conclusion</A>=20

        <LI><A=20
        =
href=3D"http://tuxgraphics.org/electronics/200904/avr-c-programming.shtml=
#0lfindex17">References/Download</A>=20
        </LI></UL><BR><SMALL>By Guido Socher</SMALL> =
</TD></TR></TBODY></TABLE><!-- INDEX_STOP --><!-- =
HEAD_OF_THE_ARTICLE_START --><BR>&nbsp;=20

<TABLE border=3D0>
  <TBODY>
  <TR>
    <TD>
      <H2>Tuxgraphics AVR C-programming tutorial</H2><IMG hspace=3D2=20
      alt=3D[Illustration]=20
      =
src=3D"http://tuxgraphics.org/common/images2/article09043/illustration.gi=
f"=20
      width=3D208 height=3D109> <!-- ABSTRACT OF THE ARTICLE -->
      <P><I>Abstract</I>:=20
      <P><!-- articleabstract_start -->This is an in introduction to =
programming=20
      of AVR microcontrollers using C as a language. The avr-gcc was =
originally=20
      developed for Unix systems. Today it is available for almost any =
system=20
      and very widely used. This article will therefore also cover =
Windows. The=20
      setup on a Mac is almost identical to Linux. <BR><!-- =
articleabstract_stop --><BR><!-- HR divider -->
      <CENTER><FONT color=3D#8282e0><B>_________________ =
_________________=20
      =
_________________</B></FONT></CENTER><BR></TD></TR></TBODY></TABLE><!-- =
HEAD_OF_THE_ARTICLE_STOP --><!-- BODY_OF_THE_ARTICLE_START --><A=20
name=3D0lfindex0>&nbsp;</A>=20
<H2>Hardware becomes software</H2>Computers become smaller and more =
powerful.=20
This has lead to an ongoing revolution in the world of analog and =
digital=20
electronics. Not so long ago we were building circuits with dozens of =
TTL chips=20
and many analog components. <BR><BR>Todays circuits don't look like that =

anymore. They have just a few analog or digital components at the input =
or=20
output (e.g an amplifier) and then there is one chip with many pins. =
Those chips=20
are however not application specific ICs. Those are usually generic=20
microcontrollers. More and more components are just replaced by an =
algorithm and=20
that algorithm runs probably inside a microcontroller. =
<BR><BR>Microcontrollers=20
are at the heart of this electronic revolution. It is a very exciting =
revolution=20
and it is fun to play with those microcontrollers. Come and have a look! =
<A=20
name=3D0lfindex1>&nbsp;</A>=20
<H2>What are Microcontrollers?</H2>A microcontroller is a small single =
chip=20
computer. It has CPU, Ram and permanent data storage on one small chip. =
They als=20
have build-in counters and analog to digital converters (ADCs) on chip. =
This=20
makes it possible to replace analog circuits with a microcontroller and =
some=20
software. <A name=3D0lfindex2>&nbsp;</A>=20
<H2>What are AVR microcontrollers?</H2>AVR microcontrollers are named =
after two=20
Norvegian students (Alf-Egil Bogen and Vegard Wollan) who invented them. =
AVR=20
stands for Alf and Vegard's Risc architecture. Today the AVR =
microcontrollers=20
are produced by Atmel (<A=20
href=3D"http://www.atmel.com/products/avr/default.asp">http://www.atmel.c=
om/products/avr/default.asp</A>),=20
a US company. This AVR architecture makes it quite easy to program the =
chip in=20
C. The avr-gcc development environment is available as free software. =
Learning=20
by doing is probably the best way to learn. So let's start with a =
straight=20
forward and easy to understand circuit. <A name=3D0lfindex3>&nbsp;</A>=20
<H2>Let's start with a simple circuit</H2>You might have heard about =
Astable=20
Multivibrators. It's an analog circuit that can be used to get a LED to =
blink.=20
Let's replace it by a microcontroller. It's the "hello world program" =
equivalent=20
in the microcontroller world. To replace an Astable Multivibrator is of =
course=20
not a big advantage because the complexity of an Astable Multivibrator =
is not=20
much higher than the equivalent microcontroller circuit but the =
microcontroller=20
circuit can easily be extended with more LEDs. You can easily get all =
those LEDs=20
to flash in different patterns, something that would be difficult and =
complex=20
with an analog circuit. <BR><BR>
<CENTER><A=20
href=3D"http://tuxgraphics.org/common/images2/article09043/test-circuit-l=
ed.pdf"><IMG=20
title=3D"blinking LED circuit, click for a PDF version" alt=3D"blinking =
LED circuit"=20
src=3D"http://tuxgraphics.org/common/images2/article09043/test-circuit-le=
d_th.gif"=20
width=3D600 height=3D464></A><BR>Blinking LED circuit, click for a PDF =
version=20
</CENTER><BR><BR>You can build this circuit on a dot-matrix board or =
even a=20
breadboard. AVR microcontrollers have a built in clock. They don't =
necessarily=20
need an external crystal. Breadboards can be used for most =
microcontroller=20
circuits that do not require an external crystal. <BR><BR>
<CENTER>
<TABLE>
  <TBODY>
  <TR>
    <TD><A title=3D"AVR test circuit on a breadboard."=20
      =
href=3D"http://tuxgraphics.org/common/images2/article09043/led-test-circu=
it-breadboard.jpg"=20
      rel=3Dlightbox><IMG alt=3D"[AVR test circuit on a breadboard]"=20
      =
src=3D"http://tuxgraphics.org/common/images2/article09043/led-test-circui=
t-breadboard_th.jpg"=20
      width=3D200 height=3D150></A> </TD>
    <TD><A title=3D"AVR test circuit on a breadboard."=20
      =
href=3D"http://tuxgraphics.org/common/images2/article09043/led-test-circu=
it-breadboard-2.jpg"=20
      rel=3Dlightbox><IMG alt=3D"[AVR test circuit on a breadboard]"=20
      =
src=3D"http://tuxgraphics.org/common/images2/article09043/led-test-circui=
t-breadboard-2_th.jpg"=20
      width=3D200 height=3D150></A> =
</TD></TR></TBODY></TABLE></CENTER><A=20
name=3D0lfindex4>&nbsp;</A>=20
<H2>Programming the microcontroller</H2>Programming involves basically 3 =
steps.=20
Writing the software (1). Compiling it(2) into machine loadable format =
and=20
loading it (3) into the microcontroller. The software for our test =
circuit is=20
already written. Therefore let's first focus on how to get it into the=20
microcontroller and later we discuss how to write software. <BR><BR>A =
programmer=20
is needed to program a microcontroller that comes fresh from the =
factory. This=20
programmer consists of both software and hardware. The hardware =
interconnects=20
your PC with the microcontroller. The programmer software that we will =
use is=20
called avrdude and it is available for Linux, Mac and Windows. It is a =
command=20
line controlled programmer but if you prefer mouse clicks then you can =
just=20
write a script (batch file) and include the command there. Double click =
on the=20
batch file and the programmer loads the software into the =
microcontroller.=20
<BR><BR>If you have a PC which still has a parallel port and runs Linux =
then you=20
can just build your own programmer out of a simple cable and three =
protection=20
resistors. <IMG align=3Dright=20
src=3D"http://tuxgraphics.org/common/images2/article09043/avr_programmer.=
jpg"=20
width=3D300 height=3D303>=20
<TABLE border=3D1 bgColor=3D#cdcdcd>
  <TBODY>
  <TR>
    <TH>pin on pcb</TH>
    <TH>pin on AVR</TH>
    <TH>protection resistor</TH>
    <TH>Pin on parallel port</TH></TR>
  <TR>
    <TD>5</TD>
    <TD>Reset (1)</TD>
    <TD>--</TD>
    <TD>Init (16)</TD></TR>
  <TR>
    <TD>4</TD>
    <TD>MOSI (17)</TD>
    <TD>220 Ohm</TD>
    <TD>D0 (2)</TD></TR>
  <TR>
    <TD>3</TD>
    <TD>MISO (18)</TD>
    <TD>220 Ohm</TD>
    <TD>Busy (11)</TD></TR>
  <TR>
    <TD>2</TD>
    <TD>SCK (19)</TD>
    <TD>220 Ohm</TD>
    <TD>Strobe (1)</TD></TR>
  <TR>
    <TD>1</TD>
    <TD>GND</TD>
    <TD>--</TD>
    <TD>GND (18)</TD></TR></TBODY></TABLE><BR>The cable should not be =
longer than=20
70cm. <BR><BR><BR>This programmer has the limitation that you can use it =
only on=20
circuits which run with 5V but otherwise it is fully functional. The =
option in=20
avrdude that let's avrdude know that you will use this type of =
programmer is=20
called "-c dapa". The full command line to load software =
(ledtest_pre.hex) into=20
an atmega8 chip with this parallel port programmer would be: <BR>avrdude =
-p m8=20
-c dapa -P /dev/parport0 -e -U flash:w:ledtest_pre.hex <BR><BR>Most =
people would=20
probably like to use something that works with any operating system, =
connects=20
via USB and works also with circuits that run not on 5V. Many =
microcontroller=20
circuits run e.g on 3.3V. The tuxgraphics <A=20
href=3D"http://shop.tuxgraphics.org/electronic/index-avr-programmer.html"=
>avrusb500</A>=20
is e.g such a programmer. The command line option to let avrdude know =
that you=20
will use this type of programmer is called "-c stk500v2" and you have to =
specify=20
with the option "-P" which is the equivalent com-port (or device in /dev =
for Mac=20
and Linux). It's very easy and there will be more details further down. =
<BR><BR>
<CENTER><A title=3D"avrusb500 programmer"=20
href=3D"http://tuxgraphics.org/common/images2/article09043/avrusb500.jpg"=
=20
rel=3Dlightbox><IMG alt=3D"[avrusb500 programmer]"=20
src=3D"http://tuxgraphics.org/common/images2/article09043/avrusb500_th.jp=
g"=20
width=3D200 height=3D150></A> </CENTER><BR><BR>We have now discussed the =
programmer=20
hardware and I mentioned already that there is a programmer software =
called=20
avrdude. Both hardware and software work together to get the code into =
the=20
microcontroller. <BR><BR>How to install C-compiler and this programmer =
software=20
is described in the article <A=20
href=3D"http://tuxgraphics.org/electronics/200901/avr-gcc-linux.shtml">Bu=
ilding=20
your own avr-gcc environment with atmega328p capabilities, Linux</A>. =
This=20
article has also a section at the end for Windows and Mac. Ready to use =
packages=20
are available for Windows and Mac. It's just a matter of downloading and =

installing them. <BR><BR>Download the avrledtest software at the end of =
this=20
article. <BR><BR>Power up the circuit with the atmega8 (Interestingly =
many=20
people tend to forget that. Electronic circuits that work without =
electricity=20
are not invented yet ;-). <BR><BR>Unpack the avrledtest file and go into =
the=20
directory that was created during the unpacking. From there you issue =
the=20
command: <BR>Linux (Mac is similar):<BR>avrdude -p m8 -c stk500v2 -P=20
/dev/ttyUSB0 -e -U flash:w:ledtest_pre.hex <BR>Windows:<BR>avrdude -p m8 =
-c=20
stk500v2 -P COM4 -e -U flash:w:ledtest_pre.hex <BR><BR>COM4 would be the =

equivalent comport emulated via USB. You get this information from the =
hardware=20
device manager under windows. <BR>Mac and Linux will tell you in the =
kernel=20
messages what devices to use when you plug in the avrusb500 into the usb =
port.=20
To find the right /dev device after the avrusb500 was just plugged in =
you run=20
the command dmesg and you see the kernel messages. <BR>I use Linux and I =
prefer=20
the command line as it is faster but I understand that the Windows dos =
shell is=20
a different story. To not type the command every time and do this with a =
mouse=20
click you can write a script (batch file): <PRE class=3Dcode>@echo =
-------- begin winload.bat --------

set PATH=3Dc:\avrgcc\bin;c:\avrgcc\utils\bin
REM change the com-port as needed:
set CHIP=3Dm8
avrdude -p %CHIP%  -c stk500v2 -P COM4 -e -U flash:w:ledtest_pre.hex

@echo --------  end  --------
pause
</PRE><BR>You can also include the device name into the avrdude.conf =
file and=20
then you do not have to specify it on the command line. Look for an =
option=20
called "default_serial". <BR><BR>Of course it does not harm to use a =
script=20
under Mac or Linux if you like. You could also include the command in a =
makefile=20
(we get to that later). <BR><PRE class=3Dcode>#!/bin/sh -x
# script to load code into a atmega8 (for Linux and Mac)
#
chip=3Dm8
avrdude -p $chip -c stk500v2 -P /dev/ttyUSB0 -e -U =
flash:w:ledtest_pre.hex
# if you want to start it by double click in the file manager
# then uncomment the following line to keep the window open until
# you hit return:
# read
</PRE><BR><BR>During the loading of the software with avrdude you will =
see a=20
printout like this: <BR><PRE class=3Dcode>avrdude -p m8 -c stk500v2 -e =
-U flash:w:ledtest_pre.hex

avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% =
0.10s

avrdude: Device signature =3D 0x1e9307
avrdude: erasing chip
avrdude: reading input file "ledtest_pre.hex"
avrdude: input file ledtest_pre.hex auto detected as Intel Hex
avrdude: writing flash (158 bytes):

Writing | ################################################## | 100% =
0.13s

avrdude: 158 bytes of flash written
avrdude: verifying flash memory against ledtest_pre.hex:
avrdude: load data flash data from input file ledtest_pre.hex:
avrdude: input file ledtest_pre.hex auto detected as Intel Hex
avrdude: input file ledtest_pre.hex contains 158 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% =
0.08s

avrdude: verifying ...
avrdude: 158 bytes of flash verified

avrdude: safemode: Fuses OK

avrdude done.  Thank you.
</PRE><BR>... and you have successfully loaded the microcontroller with=20
software. Congratulations! <A name=3D0lfindex5>&nbsp;</A>=20
<H2>The software</H2>The ledtest software will cause a LED on pin PC5 to =
blink.=20
The algorithm to do this would be: LED on, wait a bit, LED off, wait a =
bit, ....=20
<BR><BR>The LED is connected between Vcc (+5V) and the pin PC5 of the=20
microcontroller. To switch the LED on the pin of the microcontroller =
needs to go=20
to 0V (GND) and to switch it off it needs to go to +5V. We could have =
also=20
connected the LED between GND and PC5 however the output drivers of the=20
microcontroller can handle more current when pulling a pin to GND. With =
the LED=20
connected between Vcc and PC5 we have a current flow when the =
microcontroller=20
output pin goes to GND (0V). <BR><BR>Now we understand what we want to =
do and it=20
is just a matter of finding the right commands/functions. Since we are=20
programming hardware related functionality it is always good to have the =

datasheet at hand describing that hardware: <A=20
href=3D"http://tuxgraphics.org/common/images2/article09043/atmega8compl_v=
Q.pdf">atmega8=20
datasheet, pdf, 2846392 bytes</A>. What we want to do is described in =
chapter=20
"I/O Ports", "Configuring the Pin, page 52". <BR><BR>The microcontroller =
has a=20
data direction register (DDR) by setting a bit in that register to one =
we=20
configure the corresponding pin as output. There is also a PORT register =
where=20
one can set a bit to switch the output of a pin on or off. <BR><BR>How =
to set=20
specific bits in those registers? This is a compiler/avr library =
specific=20
question. It would be documented under "IO definitions" the avr-libc=20
documentation (<A=20
href=3D"http://tuxgraphics.org/common/src2/article09043/avr-libc-user-man=
ual-1.6.4/modules.html">avr-libc=20
1.6.4, modules</A>). It is implemented in the current avr-libc-1.6.X as=20
something that looks like a variable. In older versions (version 1.0.X) =
it used=20
to be implemented as a function (sbi and cbi). The names of those =
"variables"=20
for atmega8 are found in the directory tree of your avr-libc under=20
&lt;theRootDirOfAvrLibC&gt;/avr/include/avr/iom8.h. What we need is DDRC =
for the=20
data direction register on port C and PORTC to access the port C =
registers.=20
There are also constants defined in this iom8.h file which can be used =
to write=20
to a specific bit position (PORTC5 or DDC5). The C syntax to set a bit =
at=20
position is "|=3D(1&lt;&lt;...)" and to write a zero would be=20
"&amp;=3D~(1&lt;&lt;...)". It might look a bit strange the first time =
you see this=20
but you don't really have to understand it. Just note it down and =
copy/paste it=20
as needed into your program. <BR><BR>So here is the main portion of our =
blinking=20
LED code: <PRE class=3Dcode>
int main(void)
{
          /* enable pin as output by setting the data direction register =
*/
          DDRC|=3D (1&lt;&lt;DDC5);

          while (1) {
                      /* led on, pin=3D0 */
                      PORTC &amp;=3D ~(1&lt;&lt;PORTC5);
                      delay_ms(500);
                      /* set output to 5V, LED off */
                      PORTC|=3D (1&lt;&lt;PORTC5);
                      delay_ms(500);
          }
          return(0);
}
    </PRE>You can download the full code at the end of the article as=20
avrledtest. <BR><BR>There are a few things that are strange about this =
code when=20
you are new to microcontrollers. The most obvious one is the while(1) =
statement.=20
All microcontroller software has this endless loop in main.c. We don't =
have any=20
operating system running here and we don't have a need to terminate the =
program.=20
The while(1) is akin to an operating system which would step one after =
the other=20
through all the tasks/processes that need to be done and run =
continuously every=20
task a little bit. <BR><BR>Many people ask also why I always use my own =
function=20
delay_ms and not the standard _delay_ms. There are two reasons:=20
<UL>
  <LI>_delay_ms takes a max value of 262ms. So to delay 0.5 seconds one =
would=20
  need to write _delay_ms(250);_delay_ms(250);=20
  <LI>the main reason is however that _delay_ms makes the code very fat =
and you=20
  will quickly fill up the flash memory of your microcontroller just by =
calling=20
  that function a couple of times. </LI></UL>My own delay_ms uses =
internally also=20
_delay_ms but just in one place. You can find the complete code for =
avrledtest=20
in the download section. <BR><BR>Once you have understood this simple =
program=20
you will find that much more complicated applications are not really =
more=20
complicated. It is all about reading the state of some IO-pins or =
changing=20
IO-pins according to a certain pattern. <A name=3D0lfindex6>&nbsp;</A>=20
<H2>How do I compile that code?</H2>The commands to compile this code =
would be: <PRE class=3Dcode>avr-gcc -g -mmcu=3Datmega8 -Wall -Os -c =
ledtest.c

avr-gcc -g -mmcu=3Datmega8 -o ledtest.out -Wl,-Map,ledtest.map ledtest.o

avr-objcopy -R .eeprom -O ihex ledtest.out ledtest.hex

avr-size ledtest.out
</PRE>The first line converts ledtest.c into the object file ledtest.o. =
The=20
second line links the objects into ledtest.out. If you have a project =
that=20
consists of more than one C-code file then you can use this to link all =
the=20
objects together. <BR><BR>The third line makes then a .hex file which =
can be=20
used to load the software into the microcontroller. <BR><BR>The last =
line is to=20
check the size of the code. This way you can easily detect inefficient =
code and=20
take action. <A name=3D0lfindex7>&nbsp;</A>=20
<H2>Help! Give me an IDE</H2>Integrated development environments are =
meant to=20
make programming easer. avr-eclipse is e.g such a solution. <BR><BR>My =
personal=20
opinion is however that those IDEs just limit you to the ideas that the=20
developer of this IDE had. It looks like it is easier simply because it =
looks=20
nice but in fact it is even more complicated because you have to deal =
now with=20
IDE specific settings. Often you are forced to use a specific editor =
which is=20
part of that IDE instead of the editor that you like. Compiling with one =
button=20
click can also be achieved by using Makefiles. <BR><BR>In the end it is =
a matter=20
of personal taste. If you like it then use it. Here I will however show =
you how=20
you can have a comfortable development environment which you will =
understand=20
then tailor to your needs. <BR><BR>The most important part of a =
development=20
environment is the text editor. You want one that supports C-code syntax =

highlighting. <BR><BR>There are many free choices:=20
<UL>
  <LI><A =
href=3D"http://www.crimsoneditor.com/">http://www.crimsoneditor.com/</A> =

  is a very powerful choice for windows.=20
  <LI><A href=3D"http://www.nedit.org/">http://www.nedit.org/</A> is a =
good editor=20
  for Unix systems=20
  <LI><A href=3D"http://www.vim.org/">http://www.vim.org/</A> I like =
this one very=20
  much. It exists for Windows, Linux and Mac but you have to learn how =
to use=20
  it. Only after a couple of weeks training you will understand why I =
like it.=20
  <LI><A=20
  =
href=3D"http://www.gnu.org/software/emacs/windows/Getting-Emacs.html">htt=
p://www.gnu.org/software/emacs/windows/Getting-Emacs.html</A>=20
  Emacs, a bit fat but very powerful and available for almost any =
system.=20
</LI></UL><BR>Besides the editor you need a smart way to compile code. =
Maybe=20
with just a mouse click or one command (if you prefer to type instead of =

clicking). This can be done by using a Makefile. <BR><BR>AVR studio is =
an IDE=20
specifically AVR software development. AVR studio is maintained by Atmel =
and it=20
is available for Windows only. AVR studio has an editor, an assembler =
and a=20
programmer. AVR studio has no C compiler. All you can do with AVR studio =
is call=20
the external avr-gcc compiler. In other words if you want to program in=20
assembler then AVR studio is quite OK but if you want to work with =
C-code then=20
its value is very limited. AVR studio does not run on Mac or Linux. <A=20
name=3D0lfindex8>&nbsp;</A>=20
<H2>Makefiles</H2>Makefiles are just text files containing rules on what =
to do=20
if a file was updated. All the needed dependencies are then searched and =
the=20
corresponding commands are executed. <BR><BR>The basic syntax of a =
Makefile=20
looks like this: <BR><PRE class=3Dcode># comments start with a hash
#
target:  dependency1 dependency2 ...
&lt;tab&gt; command
</PRE><BR>The lines after the target have to start with a TAB-character. =
You can=20
not use space instead. The top most target in the file should be the =
main target=20
(e.g ledtest.hex if that is the main thing you want to have in the end). =
The=20
dependency1, dependency2, etc... are the ingredients you need to =
generate the=20
target. <BR><BR>So let's apply this to our case. <BR><PRE class=3Dcode># =
our main target:
ledtest.hex: ledtest.out
      avr-size ledtest.out
      avr-objcopy -R .eeprom -O ihex ledtest.out ledtest.hex
#
# now all the small intermediate things that we need:
ledtest.out: ledtest.o
      avr-gcc -g -mmcu=3Datmega8 -o ledtest.out -Wl,-Map,ledtest.map =
ledtest.o
#
#
ledtest.o: ledtest.c
      avr-gcc -g -mmcu=3Datmega8 -Wall -Os -c ledtest.c
</PRE><BR><BR>To compile the code with a make file you just run the =
command=20
"make" and make will search for a Makefile and try to built the top most =
target.=20
You can also add more targets that do other things. To execute any =
target other=20
than the top most you specifiy its name after the command make. All =
tuxgraphics=20
Makefiles contain e.g a load target. You can say "make load" to compile =
and load=20
the software into the microcontroller. <BR><BR>Under Windows you can use =
a batch=20
file to setup the environment and compile. This makes it then also =
possible to=20
compile with a mouse click. Just double click on the batch file: =
<BR><PRE class=3Dcode>@echo -------- begin winmake.bat --------

set AVR=3Dc:\avrgcc

set CC=3Davr-gcc

set PATH=3Dc:\avrgcc\bin;c:\avrgcc\utils\bin

make -f Makefile

@echo --------  end  --------
pause
</PRE><A name=3D0lfindex9>&nbsp;</A>=20
<H2>What are Fuses?</H2>Microcontrollers do not have a Bios where you =
could set=20
some initial settings. Things that need to be there before the first =
line of=20
code is executed are defined by Fuses. Those fuses are not like =
electrical fuses=20
which you burn and destroy. It is just some bit pattern used for =
configuration.=20
You can change it as often as you want. But be careful and read the =
datasheet=20
frist. If you change the wrong bits then it can happen that the =
microcontroller=20
can no longer be programmed. That means you can not undo the change =
anymore.=20
<BR><BR>Most of the time you will use the Fuses to set the type of clock =
to use.=20
E.g internal clock or external crystal. What kind of clock speed etc...=20
<BR><BR>If you download code from tuxgraphics then always check the =
README file=20
that comes with it for the correct fuse settings. The software will =
generally=20
malfunction if you do not have the recommended fuse settings. <BR><BR>To =
see the=20
current fuse settings for an atmega8 (m8) you would use the command: =
<BR><PRE class=3Dcode>avrdude -p m8 -c stk500v2 -v -q

This will then result in a big printout but the important lines are:

avrdude: Device signature =3D 0x1e9307
avrdude: safemode: lfuse reads as E1
avrdude: safemode: hfuse reads as D9
</PRE><BR>The above are the factory default settings for a new atmega8 =
chip=20
running on a 1MHz internal clock. <A name=3D0lfindex10>&nbsp;</A>=20
<H2>Debugging</H2>Most of the smaller AVR microcontrollers don't support =
any=20
debugging features and I personally have never really felt the need for =
single=20
step debugging or setting break-point. I think that the use of in-target =

debugging is often overestimated. There is a much easier and more =
natural way to=20
write good code and find faults if they happen. <BR><BR>A lot of it has =
to do=20
with methodology. Try to keep the code structured. Put things that =
belong=20
together into the same file. Don't use global variables outside the file =
where=20
they are declared. Develop step by step. Write a small function then =
test it.=20
Expand it and then test it. I never wite a large junk of code at once. =
If=20
something does not work then take a break and afterwards read over the =
code.=20
<BR><BR>A microcontroller has by default no display. It seems difficult =
to guess=20
where a fault might be because you can not easily add printouts. I put =
usually=20
an LED in all circuits that I build and that is what I use to debug the =
code. It=20
is very simple and it works very well. You can test if you run through a =
certain=20
piece of code. You can add an if-statement testing a variable for its =
value and=20
then switch on the LED. LEDs have also the advantage that they do not =
change the=20
timing. Microcontrollers do usually directly interwork with other =
hardware. The=20
timing is usually very important. Changing the state of an LED is not =
intrusive=20
at all. It's a very good debugger. <BR><BR>Code is usually not full of =
faults.=20
There is usually one specific thing that does not work and therefore it =
is just=20
a matter of narrowing down were the fault might be. An LED is good =
enough.=20
<BR><BR>What can be difficult to debug with an LED are large algorithms =
or=20
operations on strings. Those things are however not hardware dependent. =
They=20
don't need to run in a microcontroller. Copy/paste the function in =
question into=20
a different file and then change it a bit such that it runs on your PC. =
Add=20
printf all over the place and compile it (gcc -Wall test test.c). Now =
you can=20
see why e.g a URL decoding function does not work, or an IP packet =
checksum is=20
wrong,.... Any more complex algorithm can be analyzed this way. It works =
very=20
well and is much better than a debugger. <BR><BR>Many microcontroller =
circuits=20
have eventually some kind of output. It might be an LCD display, a web =
page, a=20
rs232 interface. Those can also be used for debug purposes. <A=20
name=3D0lfindex11>&nbsp;</A>=20
<H2>Writing small and efficient code</H2>In general there is not much =
difference=20
in writing C-code for a PC computer or for a microcontroller. The=20
microcontroller is however just a very small computer. It is therefore =
important=20
to not waste resources. <BR><BR>To use the right datatype for the =
purpose is=20
very important. It is an 8 bit microcontroller so all 8 bit types are =
very=20
efficient. Try to use 8-bit datatypes as much as possible:=20
<UL>
  <LI>uint8_t (same as: unsigned char)=20
  <LI>int8_t (same as: signed char) </LI></UL>If 8 bit is not enough =
then go for=20
16 bit:=20
<UL>
  <LI>uint16_t (same as: unsigned int)=20
  <LI>int16_t (same as: int) </LI></UL>I have never needed any bigger =
numbers.=20
<BR><BR>If you do some calculation then try to use integer math as much =
as=20
possible. Datatypes of float and double really blow up the code. You can =
e.g use=20
internally integers even if you want to represent one digit behind the =
decimal=20
point. Only when you print it you would display it with a decimal point. =
The=20
internal number 100 would then represent 10.0. <BR><BR>An efficient way =
to=20
convert an integer into a string for displaying on a LCD or a web page =
is the=20
avr-libc specific function "itoa" (in stdlib.h). This can be used to =
convert 100=20
into the string "100". To add a decimal point is just a matter of adding =
'.'=20
into the string one position before the end of the string. <BR><A=20
name=3D0lfindex12>&nbsp;</A>=20
<H2>Code examples</H2>Let's get to some more complex C-code examples. =
Things=20
which are generic and useful. To really understand the examples I =
recommend to=20
read the corresponding chapter in the datasheet (<A=20
href=3D"http://tuxgraphics.org/common/images2/article09043/atmega8compl_v=
Q.pdf">atmega8=20
datasheet, pdf, 2846392 bytes</A>) <A name=3D0lfindex13>&nbsp;</A>=20
<H2>Code examples: Analog to digital conversion</H2>The atmega8 has a =
built in=20
analog to digital converter. Here is how to use it. We use as a =
reference=20
voltage the internal 2.56V reference. The ADC has a resolution of 10bit =
(1024).=20
In other words an adc value of e.g 500 would correspond to: 500/1024 * =
2.56=20
Volts. <BR><PRE class=3Dcode>// return an analog value for a given =
channel. Works without interrupt
unsigned int convertanalog(unsigned cha channel)
{
        // Use the intenal  ref:
        ADMUX=3D(1&lt;&lt;REFS1)|(1&lt;&lt;REFS0)|(channel &amp; 0x0f);
        // set the clock division factor such that you
        //  stay in the recommended range of 50-200kHz
        =
ADCSR=3D(1&lt;&lt;ADEN)|(1&lt;&lt;ADPS2)|(1&lt;&lt;ADPS1)|(1&lt;&lt;ADPS0=
);
        //  start conversion
        ADCSR|=3D (1&lt;&lt;ADSC);
        while(bit_is_set(ADCSR,ADSC)); // wait for result
        adlow=3DADCL; // read low first !!
        adhigh=3DADCH;
        return((unsigned int)((adhigh&lt;&lt;8)|(adlow &amp; 0xFF)));
}


<I>// Copy/paste the above code and to read the voltage on ADC0 pin you =
would use:</I>

adc0val=3Dconvertanalog(0);
</PRE><A name=3D0lfindex14>&nbsp;</A>=20
<H2>Code examples: Timers</H2>Microcontrollers have built in timers and=20
counters. In the first example with the blinking LED we used just the =
delay_ms=20
function for the timing. That is OK if you don't do much other things =
but for=20
more complex things you need something like an interrupt that gets =
executed=20
periodically. To measure rotations per minute (RPM) you would use a =
counter. In=20
defined time intervals you would read the counter and copy its value to =
a=20
variable. That variable would then contain the rotations per minute. =
<BR><BR>It=20
is important to note that you must keep the code executed inside the =
interrupt=20
short. E.g copy a variable or switch on/off something. You can however =
not use=20
an interrupt to update a display. Display updates or web-page updates =
would be=20
done from the main while(1) loop. <BR><BR>Here is an example the does =
causes an=20
LED to blink but it uses a timer. You can download the complete code at =
the end=20
as avrledtest_timer. <BR><BR>The corresponding datasheet chapter is =
"8-bit=20
Timer/Counter2". <BR><PRE class=3Dcode>static volatile uint8_t =
cnt2step=3D0;

// this function gets now called in 20Hz intervals
ISR(TIMER2_COMP_vect){
        cnt2step++;
        if (cnt2step&gt;=3D10){
                if (PORTC&amp;(1&lt;&lt;PORTC5)){
                        LEDON;
                }else{
                        LEDOFF;
                }
                cnt2step=3D0;
        }
}

/* setup timer T2 as an interrupt generating time base.
* You must call once sei() in the main program */
void init_cnt2(void)
{
        cnt2step=3D0;
        TIMSK=3D(1&lt;&lt;OCIE2); // compare match on OCR2
        TCNT2=3D0;  // init counter
        OCR2=3D195; // value to compare against 3906Hz/195=3D20Hz
        // do not change any output pin, clear at compare match with =
OCR2:
        TCCR2=3D(1&lt;&lt;WGM21);
        // divide clock by 256: 1MHz/256=3D3906.25Hz
        // clock divider, start counter (or with WGM21 setting):
        TCCR2|=3D(1&lt;&lt;CS02)|(1&lt;&lt;CS01)|(0&lt;&lt;CS00);
}

int main(void)
{
        LED_INIT;
        LEDOFF;
        init_cnt2();
        sei();

        // nothing to do in the main loop:
        while (1) {
        }
        return(0);
}

</PRE><BR>With the function init_cnt2 we configure the timer. After that =
the=20
microcontroller will automatically execute the function =
ISR(TIMER2_COMP_vect) in=20
20Hz intervals. Using a variable that counts up we can reduce the =
blinking=20
frequency such that we get a nice blinking LED which goes on and off in =
1sec=20
intervals. <A name=3D0lfindex15>&nbsp;</A>=20
<H2>Code examples: LCD displays</H2>Good user interface to =
microcontrollers are=20
small character LCD displays. Using a small library we can easily print =
text or=20
numbers. The full code can be downloaded at the end as avrlcdtest. The =
zip=20
archive contains also a schematic drawing that shows how to connect the =
LCD to=20
the microcontroller. <BR><PRE class=3Dcode>#include "lcd.h"

int main(void)
{
        // initialize display:
        lcd_init(LCD_DISP_ON);
        // go to position 6 in the second line (1):
        lcd_gotoxy(6,1);
        // write some text:
        lcd_puts("=3DOK=3D");
}
</PRE><BR>The library has more functions e.g for clearing the display or =
writing=20
individual characters instead of strings. <BR><A =
name=3D0lfindex16>&nbsp;</A>=20
<H2>Conclusion</H2>This is just to get you started. Tuxgraphics has the =
source=20
code available for all projects. You can take it and modify it to learn =
or=20
expand it to implement your own ideas. <BR><BR>Those little chips are =
very=20
interesting and it is a lot of fun. <BR><A name=3D0lfindex17>&nbsp;</A>=20
<H2>References/Download</H2>
<UL>
  <LI><A =
href=3D"http://tuxgraphics.org/common/src2/article09043/">Download=20
  section</A>=20
  <LI><A=20
  =
href=3D"http://tuxgraphics.org/electronics/200901/avr-gcc-linux.shtml">Bu=
ilding=20
  your own avr-gcc environment with atmega328p capabilities, Linux</A>, =
How to=20
  install a functioning AVR C-compiler. Includes links and hits for Mac =
and=20
  Windows.=20
  <LI><A=20
  =
href=3D"http://tuxgraphics.org/common/src2/article09043/avr-libc-user-man=
ual-1.6.4/modules.html">avr-libc=20
  1.6.4, modules</A>, avr-libc documentation=20
  <LI><A=20
  =
href=3D"http://tuxgraphics.org/electronics/200411/article352.shtml">artic=
le from=20
  2004 "Programming the AVR microcontroller with GCC, libc 1.0.4"</A>, =
this is=20
  the grandfather of this new article.=20
  <LI>The tuxgraphics electronics online shop (world wide shipping): <A=20
  =
href=3D"http://shop.tuxgraphics.org/">shop.tuxgraphics.org</A><BR></LI></=
UL><!-- vim: sw=3D2 ts=3D2 et tw=3D80:=0A=
 --><!-- BODY_OF_THE_ARTICLE_STOP --><!-- 2pdaIgnoreStart --><BR=20
clear=3Dall>
<HR id=3Dnoprint SIZE=3D2 noShade>

<TABLE id=3Dnoprint border=3D0 width=3D250>
  <TBODY>
  <TR>
    <TD>
      <DIV class=3Dbbutton><A class=3Dnodec =
href=3D"http://tuxgraphics.org/">&lt;--,=20
      tuxgraphics Home</A></DIV></TD>
    <TD>
      <DIV class=3Dbbutton><A class=3Dnodec=20
      href=3D"http://tuxgraphics.org/electronics/">Go to the index of =
this=20
      section</A></DIV></TD></TR></TBODY></TABLE><BR clear=3Dall>
<HR SIZE=3D2 noShade>
<!-- ARTICLE FOOT -->=A9 Guido Socher, tuxgraphics.org<BR>
<P align=3Dright><FONT size=3D1>2010-01-22, generated by tuxgrparser =
version=20
2.57</FONT></P></BODY></HTML>

------=_NextPart_000_0000_01CAB98C.1FFF1050
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://tuxgraphics.org/electronics/tuxgraphics_icon.jpg

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
TfntPs7v8RlxPp6//9k=

------=_NextPart_000_0000_01CAB98C.1FFF1050
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://tuxgraphics.org/common/images2/article09043/illustration.gif

R0lGODlh0ABtAOc3ACIiIjo+OFZWVJGSjq+urcbGxdjWzOLi4bZ6J+6cLGdmZOrq6iouKOWVJ/Ly
8vuuQ3Z2dN6SJvOuTsCUVIGCef726J6enFFSUNuwdjEyLfnIgra2tU5OTLByHvr6+vzZpq6DSO7G
jbB2IkpKSY6OhTU2MdLS0vTZsal7PNmNJsLCwapxIkZGRK6qniYqJK+FTrKUa4qCf9ra2b6ENvvm
yt3Hp8yvh/7+/kY+P9G3lbqJRf7s1c7OzrWhgqF6R6ZqHllaWKaGWpaWk9WjXqampD5CPL6+vTo2
NW1vbL6ecueoT/KiLsWxl3p6d4qKhfns28iDI/PAe/TiykI+OrKOXte/nSImIPuyUe7awGhiXe7u
7qCZkbyxpPKpRt7e3ubm5s/Gt0M6PNWVPF5eXOeiQ6Oem86matLCq5KKh6aKYsrKysK4pD44MM2O
N3txboZ+euXAiPy/bPTSpezWtn1+dcuia7OiiqqOZv7y4Yt+e/G7b7q6ubOysYWGfZuSkD4+PvOk
ODo6OuWePFBGRzcuKtGKJdyiTsa+uOe0bZKOgqCMctnLuqqgnevMn8qVTJqal87CtLqqmDIuLODS
wq6entKaSqSin+rcyHNubHJoaObWwDo6NjY6NCYmJpKGhSoqKkJCQvyoNo6Kfj4+Or59JKqahuma
LPy4WG5pZcOORVtSUPXLkO7i0WJiYc/KxpaSjZiGhOW6gC4uLvC0X/Lq4IqGgL6lhc2cWaqmo396
dUpGRDoyNsKLPPrdtZaKiGpqadrSxunQr8m6pkI+P7aupDIyMoaCfVRKSIJ+eFdOTPaqPjY2NpKO
hrKqqdKqdMaKN+Le28rCt762rcK6to6OjM+GIp+ZmIaHhfLexLKmqCYmIsmoe7aOWpKOimBWWLB8
OEJCPioqJj46Ntu3g0ZCQI6Kgo6Ggvry6TYyLXNycJqWkvqjK/b29l5aV6uqqC4uKsrGxVZSUI6K
htbW1r2OTbClnT46O5aOivOeKk5KSNbS0ducR8CaZvu6Y4KCgX5+fSwAAAAA0ABtAAAI/gBvCBxI
sKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaPHjyBDihxJsqTJkyhTqlzJsqXLlzBjypxJs6bN
mzhz6tzJs6fPnzw9AB1K1KHQokiTKl3K9OLRplBxLqBGgYCJAw6iapXpjsOIEUDSDdjA48vWsyq/
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
qzBmAqUA5SgHMQsVEAA7

------=_NextPart_000_0000_01CAB98C.1FFF1050
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://tuxgraphics.org/common/images2/article09043/test-circuit-led_th.gif

R0lGODlhWALQAef/AAAAAAEBAQICAgMDAwQEBAUFBQYGBgcHBwgICAkJCQoKCgsLCwwMDA0NDQ4O
Dg8PDxAQEBERERISEhMTExQUFBUVFRYWFhcXFxgYGBkZGRoaGhsbGxwcHB0dHR4eHh8fHyAgICEh
ISIiIiMjIyQkJCUlJSYmJicnJygoKCkpKSoqKisrKywsLC0tLS4uLi8vLzAwMDExMTIyMjMzMzQ0
NDU1NTY2Njc3Nzg4ODk5OTo6Ojs7Ozw8PD09PT4+Pj8/P0BAQEFBQUJCQkNDQ0REREVFRUZGRkdH
R0hISElJSUpKSktLS0xMTE1NTU5OTk9PT1BQUFFRUVJSUlNTU1RUVFVVVVZWVldXV1hYWFlZWVpa
WltbW1xcXF1dXV5eXl9fX2BgYGFhYWJiYmNjY2RkZGVlZWZmZmdnZ2hoaGlpaWpqamtra2xsbG1t
bW5ubm9vb3BwcHFxcXJycnNzc3R0dHV1dXZ2dnd3d3h4eHl5eXp6ent7e3x8fH19fX5+fn9/f4CA
gIGBgYKCgoODg4SEhIWFhYaGhoeHh4iIiImJiYqKiouLi4yMjI2NjY6Ojo+Pj5CQkJGRkZKSkpOT
k5SUlJWVlZaWlpeXl5iYmJmZmZqampubm5ycnJ2dnZ6enp+fn6CgoKGhoaKioqOjo6SkpKWlpaam
pqenp6ioqKmpqaqqqqurq6ysrK2tra6urq+vr7CwsLGxsbKysrOzs7S0tLW1tba2tre3t7i4uLm5
ubq6uru7u7y8vL29vb6+vr+/v8DAwMHBwcLCwsPDw8TExMXFxcbGxsfHx8jIyMnJycrKysvLy8zM
zM3Nzc7Ozs/Pz9DQ0NHR0dLS0tPT09TU1NXV1dbW1tfX19jY2NnZ2dra2tvb29zc3N3d3d7e3t/f
3+Dg4OHh4eLi4uPj4+Tk5OXl5ebm5ufn5+jo6Onp6erq6uvr6+zs7O3t7e7u7u/v7/Dw8PHx8fLy
8vPz8/T09PX19fb29vf39/j4+Pn5+fr6+vv7+/z8/P39/f7+/v///yH+FUNyZWF0ZWQgd2l0aCBU
aGUgR0lNUAAsAAAAAFgC0AFACP4A//kbSLCgwYMIEypcyLChw4cQI0qcSLGixYsYM2rcyLGjx48g
Q4ocabAfyZMoU6pcybKly5cwY8qcOdEkzZs4c+rcybOnz59AC9oMSrSo0aNIkypdanEo06dQo0qd
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
XNOVXY81IAAAOw==

------=_NextPart_000_0000_01CAB98C.1FFF1050
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://tuxgraphics.org/common/images2/article09043/led-test-circuit-breadboard_th.jpg

/9j/4AAQSkZJRgABAQEASABIAAD/4TJHRXhpZgAASUkqAAgAAAALAA8BAgAKAAAAkgAAABABAgAJ
AAAAnAAAABIBAwABAAAAAQAAABoBBQABAAAApgAAABsBBQABAAAArgAAACgBAwABAAAAAgAAADEB
AgAKAAAAtgAAADIBAgAUAAAAwAAAABMCAwABAAAAAgAAAGmHBAABAAAApAEAAKXEBwDQAAAA1AAA
AKIeAABQYW5hc29uaWMARE1DLUZaMTgAAEgAAAABAAAASAAAAAEAAABWZXIuMS4wICAAMjAwOTow
MzoyOSAxNToxNzo0OABQcmludElNADAyNTAAAA4AAQAWABYAAgAAAAAAAwBkAAAABwAAAAAACAAA
AAAACQAAAAAACgAAAAAACwCsAAAADAAAAAAADQAAAAAADgDEAAAAAAEFAAAAAQEBAAAAEAGAAAAA
CREAABAnAAALDwAAECcAAJcFAAAQJwAAsAgAABAnAAABHAAAECcAAF4CAAAQJwAAiwAAABAnAADL
AwAAECcAAOUbAAAQJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgCaggUA
AQAAAEIDAACdggUAAQAAAEoDAAAiiAMAAQAAAAIAAAAniAMAAQAAAGQAAAAAkAcABAAAADAyMjED
kAIAFAAAAFIDAAAEkAIAFAAAAGYDAAABkQcABAAAAAECAwACkQUAAQAAAHoDAAAEkgoAAQAAAIID
AAAFkgUAAQAAAIoDAAAHkgMAAQAAAAUAAAAIkgMAAQAAAAAAAAAJkgMAAQAAABAAAAAKkgUAAQAA
AJIDAAB8kgcA4hoAAJoDAAAAoAcABAAAADAxMDABoAMAAQAAAAEAAAACoAQAAQAAAAAKAAADoAQA
AQAAAIAHAAAFoAQAAQAAAIQeAAAXogMAAQAAAAIAAAAAowcAAQAAAAMAAAABowcAAQAAAAEAAAAB
pAMAAQAAAAEAAAACpAMAAQAAAAIAAAADpAMAAQAAAAAAAAAEpAUAAQAAAHweAAAFpAMAAQAAACUA
AAAGpAMAAQAAAAAAAAAHpAMAAQAAAAAAAAAIpAMAAQAAAAAAAAAJpAMAAQAAAAAAAAAKpAMAAQAA
AAAAAAAAAAAACgAAAOgDAAAcAAAACgAAADIwMDk6MDM6MjkgMTU6MTc6NDgAMjAwOTowMzoyOSAx
NToxNzo0OAAEAAAAAQAAAEIAAABkAAAAHgAAAAoAAAAvAAAACgAAAFBhbmFzb25pYwAAADcAAQAD
AAEAAAACAAAAAgAHAAQAAAAAAQAHAwADAAEAAAABAAAABwADAAEAAAABAAAADwABAAIAAAAQAAAA
GgADAAEAAAACAAAAHAADAAEAAAACAAAAHwADAAEAAAAGAAAAIAADAAEAAAACAAAAIQAHAAgYAACI
BgAAIgADAAEAAAAAAAAAJAADAAEAAAAAAAAAJQAHABAAAACQHgAAJgAHAAQAAAAwMjMwJwADAAEA
AAAAAAAAKAADAAEAAAABAAAAKQAEAAEAAADSJQAAKgADAAEAAAACAAAAKwAEAAEAAAABAAAALAAD
AAEAAAAAAAAALQADAAEAAAACAAAALgADAAEAAAABAAAALwADAAEAAAABAAAAMAADAAEAAAABAAAA
MQADAAEAAAACAAAAMgADAAEAAAAAAAAAMwACABQAAACgHgAANAADAAEAAAACAAAANQADAAEAAAAB
AAAANgADAAEAAAD//wAANwADAAEAAAABAQAAOAADAAEAAAABAAAAOQADAAEAAAAAAAAAOgADAAEA
AAABAAAAOwADAAEAAAABAAAAPAADAAEAAABkAAAAPQADAAEAAAABAAAAPgADAAEAAAABAAAAPwAD
AAEAAAAAAAAAQAADAAEAAAAAAAAAQQADAAEAAAAAAAAARgADAAEAAAAAAAAARwADAAEAAAAAAAAA
UAADAAEAAAAAAAAAAIAHAAQAAAAwMTIwAYADAAEAAAAAAAAAAoADAAEAAAABAAAAA4ADAAEAAAAB
AAAABIADAAEAAAASCAAABYADAAEAAAAeBAAABoADAAEAAACOBgAAB4ADAAEAAAABAAAACIADAAEA
AAABAAAACYADAAEAAAABAAAAEIACABQAAAC0HgAARFYBAkVQAADw/0RCaAXw/0FGtgCgrxCBoq8A
BqSvADCmrwAAyq8eALKvAAC0rwAAuq/U/7yvAAC+rwAA+K8AAPqvAACor+MOqq8kCsiv3wDYr5YA
tq9kALivAADOrwoB0q+HANCvuQCsr/ABsK9UAK6vhwDUr3UA9K+6APKvKgHirwAA5K8BAOCvJArm
rwEA6K8BAOqvAQDsrwAA9q8AANqvAADWrwAA8K+hAwQGoQMKBiQKyAYBAZqvAACcrwAAnq8AAPD/
U1ROAKQGAACmBgAAqAYAAKoGAACsBgAA+gcAAK4GAACwBgAAtgYAALgGAAC6BgAA9AcAAPYHAACy
BgAAtAYAALAEAACyBAAAYKkAAPD/QUXqACAF/AIiBWsCBgX8Au4H/AIkBecFEAU2BSYF0ADABgAA
KAV4ADoFBwDFGQAAUAWIAlIFXwPKBlEAAAUDADYFAAAIBQAAAgUAAAoFAAAEBQAABAcAAAYHAAAI
BwAACgcAAPIGAAD2Bv8A9AYAAPgG/wAqBSQALAURATIFEQH6BhEB/AYAAAAHAAE7BQEAPgUAAMYZ
iQHIGVgDMAWr/xwFVQDoBr4kGgVAHu8GDwDwBgEA/gYAAC4FAAABBQAAYAUAADQFAAAOZ/ACOAUA
ABQFOAESBSAAFgUnADwFNgFYBTIAWgWAAPD/V0LqAAAEEggCBI4GXAQeBAQELAEGBCgBYARUBRoE
ZgBeBK4AXwQIABIE+wAUBAgBFgQ5ARgEMAHMBLUEzgSMCdAEEAfSBOcGCAQvAQoEJAG0BPIAtgQA
EUAE8AAwBF4AOAR4ADIEgAA6BIAANATg/zwEEAA2BCQAPgQoAEwEMAFOBCABwAQsAcIEKAHqBAAA
gAWuAIIFmACDBZAAjAUAAI4FigCPBYcAUgTtAFQECQFWBO0AWAQJAdQE7QDWBAkB2ATtANoECQHw
BLoE8gRYCPQErAD2BNkA+AQAAPoEAAD8BAAA/gQAAPD/WUPmAE6qCgBQqgoAUqoKAFSqCgBEqjLI
RqrdzEiqzKxKqmgkTKoBADiqHgA6qh4APKoeAD6qHgAuqoiIMKrMiDKqd2Y0qiIRNqoAAIIEAACA
BAwAhAQAAISqYABgqoSEYqqEhGSqf39mqn9/aKojI2qqAQFsqgICbqoAAIaqAACIqgAAiqoYAIyq
GACOqgAAkKoAAJKqGACUqhgAlqoAAJiqAACgqvAAoqoAAKSq6ACmqgAAqKoKAFiqAABaqiAAXKog
AF6qIACaqgAAnKr/AMCqDgDCqg4AxKoOAMaqDgDIqggI8P9DTQ4A/AUJMASsAADw/0lTzgCIrgAA
gK5iA4KuiAOErucDhq7nAwCvAAACrwAABK8AAAavAAAIrwAAAK50AwKufAMEroIDBq54AwiueAMK
rnoDDK52Aw6ueAMQrnQDEq50AxSuagMWrmQDGK5eAxquXAMcrlADHq5OAyCubgMirnADJK50Ayau
ZgMorl4DKq5qAyyuaAMurloDMK5iAzKuYgM0rl4DNq5gAziuYgM6rmYDPK5qAz6ucANArg4CQq4A
AESuAABGrgAAYK4QAmKuAABkrgAAZq4AAPD/RkSWAGCsAABirAAAIKwAACKsAAAkrAAAJqwAACis
AAAqrAAALKwAAC6sAAAwrAAAMqwAADSsAAA2rAAAOKwAADqsAAA8rAAAPqwAAECsAABCrAAARKwA
AEasAABIrAAASqwAAEysAABOrAAAUKwAAFKsAABUrAAAVqwAAFisAABarAAAXKwAAF6sAABmBQAA
ZAUAAPD/SUEyAKCp//+iqf//pKn//6ap//+oqf//qqn//6yp//+uqf//gKkAAIKpAACEqQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAQUVCTYQD3QQpAg8D9AMVBPoD6APfA6ADVANuA6wD5QSYAl8AcAByAZQCZgND
A5gDXgOLAjQEhQPoAFwARgEsAzkCqAGfAdMCUANRAwAFKgE1ACwAfgKjAyEDWQOfAnAB+ADZAS0F
OgI/AEcAVwNWA2ECoAKyAvgCFwMhAigF8wA8ACQB1AKQAwkC7gHyAlcDWwNAA0QErABIAHECgAND
A+MCHANFA04DWQNnA9QCvgBVAKMDUwM8AwIDEwOIA7gDmwNbA3MBpgAGAREDIgEyAgUDFgPVA8cD
hgOVA8kAogA+AnEDUQJgAQQCRwN5A5QDowOMA/oBTQBAAAQC9wL8AgYDfgO4A5gDagNTA6YEYAMZ
ASkAOQCvAUMDnwN7A4EDgQNYA1BSU1QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARkNDVgYAAQAkCiQKIwoAAAAA
AAAAAAAAAAAAAAAAAADGC8wHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAUgsNAl0EsALkAeEBBwL9
Ae8BAAAxAXoEtg2ECyIBDQSwA04IXgIAAPkCSAMAAAAAAAAAAAAAAADuCvkC5wahBMwBHAKdA00C
owIAALoB5AdZFYYPOwF7BbkIPQtqBQAA+ARWBQAAAAAAAAAAAAAAAIoKKQhSEZ4K3gEmA0QIcwM2
BgAAvgQYDpEg7xNsAXwHjxAdDwIMAABuCJgIAAAAAAAAAAAAAAAAJgrjDvQf+woIAvAFPguNBwsL
AAA3CX0ShCj8E+EBWwm9E4QRSBEAAM0KPQsAAAAAAAAAAAAAAADCCTsJrhMPBtwB/QKgBvUEbgcA
ABsFpQ4MIZ4QXgE7B1UNXxAaDQAAuwgxCQAAAAAAAAAAAAAAAF4J2QPuCE0D0QFOAq8C7wIHAwAA
ZgIQCP4VrQw9AYAF/QWODBQGAAAFBdwFAAAAAAAAAAAAAAAACQmsArMF4AEQArsBzgHKAQQCAACg
AawIyRJvAswBywBOAeAAlwIAAAoFpQMAAAAAAAAAAAAAAACbCkgDVQf1ApkCPQKuBF0CtQIAAA0C
5QeAFhMKfgF9ApAMngbPAwAAHwUtBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFdCQ1oPDw4P
Dw8PDw8PDw8PDw4BBQ8PBQUPDwUPDwoKBQUCBQ8PDw8PDwUJAgUFBQUFDw8PBQ8BAgUCBQUFBQUP
BQIBAgUBBQUFBQUPAQEFAgICBQUFBQUFAwIFBQUCBQUFBQUCAwUFBQUCBQUFBQUBAwUCDwUFBQUF
BQUBAwUFBQUFBQUFBQUFDw8PBQUFBQUFBQVTMDIwODAyMjMwNTU2AAAAOTk5OTo5OTo5OSAwMDow
MDowMAA5OTk5Ojk5Ojk5IDAwOjAwOjAwAAAAAAAKAAAAAgABAAIABAAAAFI5OAACAAcABAAAADAx
MDAAAAAACAADAQMAAQAAAAYAAAASAQMAAQAAAAEAAAAaAQUAAQAAAAgfAAAbAQUAAQAAABAfAAAo
AQMAAQAAAAIAAAABAgQAAQAAABgfAAACAgQAAQAAACcTAAATAgMAAQAAAAIAAAAAAAAASAAAAAEA
AABIAAAAAQAAAP/Y/+AAEEpGSUYAAQEAAAEAAQAA/9sAQwAIBgYHBgUIBwcHCQkICgwUDQwLCwwZ
EhMPFB0aHx4dGhwcICQuJyAiLCMcHCg3KSwwMTQ0NB8nOT04MjwuMzQy/9sAQwEJCQkMCwwYDQ0Y
MiEcITIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy/8AA
EQgAcACWAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIB
AwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBka
JSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SV
lpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX2
9/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAEC
dwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4
OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQAC
EQMRAD8A9Rubdbi1lgYcSIVP4ivPvhPMYYNb0Z+HsrwkKeytn+qmvScV5jpp/sH4131qflh1WAuv
oW+9/jWvUzWx6XiuN+Jdu8vhVnUkCOQFsHHB4rtMVm69Yf2lod5abdxkjO0e45H6ipmrxaNsNUVO
tGT7nH/CnVlu9Am09nzLaScDP8LdP1zXfV4BoGoz+FfFTTEFgAVaMHaHHYV6Jp/xX8PXmFuDPZv3
EqZA/EZqac7x1NsdS5Kra2Z3VIazbPXtM1FQ1nf284P/ADzkBP5Vc80HvWlzjJaaTTDIKbvJNADi
aaaC1JmkAUhozUck0UYy8ir9TigQ4001Uk1exjzuuAf90E/yqq3iTSVOGuwPqp/wp3HZmmaaaz08
QaTIcLfw5/2jj+dW47mCcZhmjkH+ywNO4rDjRQaKAN2vMvijG2laz4c8SRDm1uQkpHdcg4/LcK9O
xXD/ABYjaTwLcARq4Eikk/w+4qWCO1R1kjWRDlWAIPqDTLiaO2t5J5WCxxqWZj2Arz74TeLZte0q
bTr2VXurIKEOMEx9Bn6Uvxe8QnTPDQ0yB8XF+dpx1EY6/nwPzobCx5pq96fEd1ealbRJF5c0jBAw
BKZyPxx/WucuxGLpjCxKHB5GDnvUWnOzzeQDgyELycDPamyxSRTOjjBXqM965dYz8j1241sMrvVA
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
s5cK5I2thtx6YJJ6jjhR/L1oAjIMC88bRnn5QSq578cs3t+lNcGMFV42ghe3QBBwfl6knt2qwJ/3
YZsqCoJ3cj7u7qPSjEfDBcYIPyHjru/mc0wI4o90pjVmRPmI25UYGFA7jt7fSioZYJfKxA6FvlGS
xTgZz09zRQB//9n/2wBDAAICAgICAQICAgIDAgIDAwYEAwMDAwcFBQQGCAcJCAgHCAgJCg0LCQoM
CggICw8LDA0ODg8OCQsQERAOEQ0ODg7/2wBDAQIDAwMDAwcEBAcOCQgJDg4ODg4ODg4ODg4ODg4O
Dg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg7/wAARCACWAMgDASIAAhEBAxEB/8QA
HgAAAAYDAQEAAAAAAAAAAAAAAAUGBwgJAgMECgH/xABGEAACAgEDAgMGBAIHBAgHAAABAgMEBQYR
EgAhBxMxCBQiQVFhCRUycSOBFiRCUmJykTOTobEXJUNzgoOi8Cc0Y5Kz0dL/xAAbAQACAwEBAQAA
AAAAAAAAAAABBAACAwUGB//EADQRAAEDAwICCQMEAQUAAAAAAAEAAhEDITESQQRRBSJhcYGhscHw
BhORFDJC0SNDUrLi8f/aAAwDAQACEQMRAD8AtX8ob+nVOPtEf/CL8d3wm8QF/qmPy2Qq+8yegEU3
9XmJ/wDulPVzHHt1VR+KLpCV/CDQHiDTjKz4vItWmmUd13+OPv8AuJD11XGCHciuZTMmOatM4Hbr
5t0iPCTV8PiF7MGgdaxOJDmcDWtykfKRol8xf5PyH8ul9w79aGxVAU03jbUs3PZN17DUnlqz/lEk
nmQE81VNnbbb/CpH7Hqmb2ZdbPoD8RjTORu3pvyvMXHxlo8wsTCxuis3y4rJwY/der5MlRhyOAvY
6ccq9qu8Mo+qspU/8D15uPF7T1zRvjpmqFq1ZjyOPyLpGF5sQ6ORuN1How7ev7nrzXSBNLiadXw9
19r+j20+O6F4zgHZs7wI0n8R5r0mH06xPr0wXs1+LEni/wCypgdRX0WLPV4xUyiq+4eVAB5o+z+v
78gPTp+Sw+vbr0LXB7Q4YK+P16NThq7qT8tMFZH161k9usGlUfPrSZRt69FYrcfTrX1qMnWJlG3r
0FFsYjrldutb2EDcS4B+hPWDPuPXqKpWLHdutRPQLbdYlugqrEnc9aj1sPWB6KC0t1rYdbj1qb06
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
Wqxq2GX4HeInkU5r3232Ow279DodDqoJRkjC/9k=

------=_NextPart_000_0000_01CAB98C.1FFF1050
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://tuxgraphics.org/common/images2/article09043/led-test-circuit-breadboard-2_th.jpg

/9j/4AAQSkZJRgABAQEASABIAAD/4TDWRXhpZgAASUkqAAgAAAALAA8BAgAKAAAAkgAAABABAgAJ
AAAAnAAAABIBAwABAAAAAQAAABoBBQABAAAApgAAABsBBQABAAAArgAAACgBAwABAAAAAgAAADEB
AgAKAAAAtgAAADIBAgAUAAAAwAAAABMCAwABAAAAAgAAAGmHBAABAAAApAEAAKXEBwDQAAAA1AAA
AKIeAABQYW5hc29uaWMARE1DLUZaMTgAAEgAAAABAAAASAAAAAEAAABWZXIuMS4wICAAMjAwOTow
MzoyOSAxNTowMToyMgBQcmludElNADAyNTAAAA4AAQAWABYAAgAAAAAAAwBkAAAABwAAAAAACAAA
AAAACQAAAAAACgAAAAAACwCsAAAADAAAAAAADQAAAAAADgDEAAAAAAEFAAAAAQEBAAAAEAGAAAAA
CREAABAnAAALDwAAECcAAJcFAAAQJwAAsAgAABAnAAABHAAAECcAAF4CAAAQJwAAiwAAABAnAADL
AwAAECcAAOUbAAAQJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgCaggUA
AQAAAEIDAACdggUAAQAAAEoDAAAiiAMAAQAAAAIAAAAniAMAAQAAAGQAAAAAkAcABAAAADAyMjED
kAIAFAAAAFIDAAAEkAIAFAAAAGYDAAABkQcABAAAAAECAwACkQUAAQAAAHoDAAAEkgoAAQAAAIID
AAAFkgUAAQAAAIoDAAAHkgMAAQAAAAUAAAAIkgMAAQAAAAAAAAAJkgMAAQAAABAAAAAKkgUAAQAA
AJIDAAB8kgcA4hoAAJoDAAAAoAcABAAAADAxMDABoAMAAQAAAAEAAAACoAQAAQAAAAAKAAADoAQA
AQAAAIAHAAAFoAQAAQAAAIQeAAAXogMAAQAAAAIAAAAAowcAAQAAAAMAAAABowcAAQAAAAEAAAAB
pAMAAQAAAAEAAAACpAMAAQAAAAIAAAADpAMAAQAAAAAAAAAEpAUAAQAAAHweAAAFpAMAAQAAACUA
AAAGpAMAAQAAAAAAAAAHpAMAAQAAAAAAAAAIpAMAAQAAAAAAAAAJpAMAAQAAAAAAAAAKpAMAAQAA
AAAAAAAAAAAACgAAAOgDAAAoAAAACgAAADIwMDk6MDM6MjkgMTU6MDE6MjIAMjAwOTowMzoyOSAx
NTowMToyMgAEAAAAAQAAAEIAAABkAAAAHgAAAAoAAAAvAAAACgAAAFBhbmFzb25pYwAAADcAAQAD
AAEAAAACAAAAAgAHAAQAAAAAAQAHAwADAAEAAAABAAAABwADAAEAAAABAAAADwABAAIAAAAQAAAA
GgADAAEAAAACAAAAHAADAAEAAAACAAAAHwADAAEAAAAGAAAAIAADAAEAAAACAAAAIQAHAAgYAACI
BgAAIgADAAEAAAAAAAAAJAADAAEAAAAAAAAAJQAHABAAAACQHgAAJgAHAAQAAAAwMjMwJwADAAEA
AAAAAAAAKAADAAEAAAABAAAAKQAEAAEAAACcIQAAKgADAAEAAAACAAAAKwAEAAEAAAADAAAALAAD
AAEAAAAAAAAALQADAAEAAAACAAAALgADAAEAAAABAAAALwADAAEAAAABAAAAMAADAAEAAAABAAAA
MQADAAEAAAACAAAAMgADAAEAAAAAAAAAMwACABQAAACgHgAANAADAAEAAAACAAAANQADAAEAAAAB
AAAANgADAAEAAAD//wAANwADAAEAAAABAQAAOAADAAEAAAABAAAAOQADAAEAAAAAAAAAOgADAAEA
AAABAAAAOwADAAEAAAABAAAAPAADAAEAAABkAAAAPQADAAEAAAABAAAAPgADAAEAAAABAAAAPwAD
AAEAAAAAAAAAQAADAAEAAAAAAAAAQQADAAEAAAAAAAAARgADAAEAAAAAAAAARwADAAEAAAAAAAAA
UAADAAEAAAAAAAAAAIAHAAQAAAAwMTIwAYADAAEAAAAAAAAAAoADAAEAAAABAAAAA4ADAAEAAAAB
AAAABIADAAEAAAAACAAABYADAAEAAAAeBAAABoADAAEAAACcBgAAB4ADAAEAAAABAAAACIADAAEA
AAABAAAACYADAAEAAAABAAAAEIACABQAAAC0HgAARFYBAkVQAADw/0RCaAXw/0FGtgCgrxCBoq8A
BqSvADCmrwAAyq8eALKvAAC0rwAAuq/S/7yvAAC+rwAA+K8AAPqvAACor9UKqq8BCsivwQDYr6MA
tq9kALivAADOryIB0q9vANCvmQCsrx4CsK9FAK6vbwDUr4AA9K+aAPKv9gDirwAA5K8BAOCvAQrm
rwEA6K8BAOqvAQDsrwAA9q8AANqvAADWrwAA8K+VAwQGlQMKBgEKyAYEBJqvAACcrwAAnq8AAPD/
U1ROAKQGAACmBgAAqAYAAKoGAACsBgAA+gcAAK4GAACwBgAAtgYAALgGAAC6BgAA9AcAAPYHAACy
BgAAtAYAALAEAACyBAAAYKkAAPD/QUXqACAFNAIiBWsCBgU0Au4HNAIkBZwGEAW0BSYFAgHABgAA
KAV4ADoFBwDFGQAAUAWIAlIFFATKBh8AAAUDADYFAAAIBQAAAgUAAAoFAAAEBQAABAcAAAYHAAAI
BwAACgcAAPIGAAD2Bv8A9AYAAPgG/wAqBSgALAURATIFEQH6BhEB/AYAAAAHAAE7BQQAPgUAAMYZ
CALIGVcDMAWr/xwFVQDoBgYmGgU5H+8GAQDwBgEA/gYAAC4FAAABBQAAYAUAADQFAAAOZ/ACOAUA
ABQFOAESBSAAFgUnADwFNgFYBTIAWgWAAPD/V0LqAAAEAAgCBJwGXAQeBAQEKQEGBCYBYATSBRoE
eQBeBJAAXwQIABIE+wAUBAkBFgQ0ARgELgHMBLUEzgSMCdAEEAfSBOcGCAQuAQoEIgG0BPIAtgQA
EUAE8AAwBF4AOAR4ADIEgAA6BIAANATg/zwEEAA2BCQAPgQoAEwELAFOBB8BwAQpAcIEJgHqBAAA
gAWQAIIFlgCDBY8AjAUAAI4FigCPBYcAUgT2AFQEDgFWBPYAWAQOAdQE9gDWBA4B2AT2ANoEDgHw
BLoE8gRYCPQErAD2BNkA+AQAAPoEAAD8BAAA/gQAAPD/WUPmAE6qCgBQqgoAUqoKAFSqCgBEqjLI
RqrdzEiqzKxKqmgkTKoBADiqHgA6qh4APKoeAD6qHgAuqoiIMKrMiDKqd2Y0qiIRNqoAAIIEAACA
BAwAhAQAAISqYABgqoSEYqqEhGSqf39mqn9/aKojI2qqAQFsqgICbqoAAIaqAACIqgAAiqoYAIyq
GACOqgAAkKoAAJKqGACUqhgAlqoAAJiqAACgqvAAoqoAAKSq6ACmqgAAqKoKAFiqAABaqiAAXKog
AF6qIACaqgAAnKr/AMCqDgDCqg4AxKoOAMaqDgDIqggI8P9DTQ4A/AUIMASsAADw/0lTzgCIrgAA
gK5bA4KuewOErtADhq7nAwCvAAACrwAABK8AAAavAAAIrwAAAK5MAwKuWAMErlwDBq5oAwiubAMK
rnYDDK6AAw6uigMQro4DEq6YAxSuogMWrqQDGK6oAxqusAMcrrIDHq60AyCucAMirm4DJK5uAyau
bgMorm4DKq50AyyucgMurnQDMK5yAzKuegM0roIDNq6CAziuhAM6rowDPK6QAz6ulANArgACQq4A
AESuAABGrgAAYK4NAmKuAABkrgAAZq4AAPD/RkSWAGCsAABirAAAIKwAACKsAAAkrAAAJqwAACis
AAAqrAAALKwAAC6sAAAwrAAAMqwAADSsAAA2rAAAOKwAADqsAAA8rAAAPqwAAECsAABCrAAARKwA
AEasAABIrAAASqwAAEysAABOrAAAUKwAAFKsAABUrAAAVqwAAFisAABarAAAXKwAAF6sAABmBQAA
ZAUAAPD/SUEyAKCp//+iqf//pKn//6ap//+oqf//qqn//6yp//+uqf//gKkAAIKpAACEqQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAQUVCTSQEOgQ0BCwEAAMCAXYBewOkAW0DdgNVAx0EJwQaBOMCgQFhAQMBGAGf
AYIDXwP4AQ0ECQTJArIBcALeAUYBdgCAAOwCFAJlAvUDuwKCAcAC7QDgAcQChAAlAIIASQExA68C
lwHqAo0BagG+AmYCBAJXADsAhgCqAm4BDwPJAk8ChAIzAmYCOAL6AVkANQCAAQAD1wLaArcClQJe
Aq0BRwJuAooBQwDLAdMC5ALeAjsDuAL9AR4BPwInAmsAtgANAtcC1gI3A/sCwwItAqoBEAJHAVMA
ZwFYAsICHwMSA/YCfQJqAhICpgF0AP4AAwJ5AgQDAQMDA48ChwJ8AkACXACEAKEBXAKMAvcC+wKu
AoUCnQJ8AgkBMABNAdkBeQKWAlBSU1QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARkNDVgYAAQABCgEKAQoAAAAA
AAAAAAAAAAAAAAAAAACTC5wHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAGgsXA2wGpwEaAr8CMwJI
AgUCAADyAUIHNw7cAE8GygXtA7AFZQYAAKgEjAQAAAAAAAAAAAAAAAC2CooEgAmkAeEC4gQSBHcD
QwIAAOwC0QqDFcsAbQj8CDkFMAjbBwAA+wZFBgAAAAAAAAAAAAAAAFIKKgi7EKIB/ARbB+8FRAa0
AwAAWAWuDdEbzQCSCn8L3AXRCqIJAADZCMsHAAAAAAAAAAAAAAAA7gnVCs4VqwEvBkoHAwXWB2YF
AADXBuoOZB7MAG0LYguqBbwLxwoAAHwJ6QgAAAAAAAAAAAAAAACKCQwHog6ZAVcEjwSFAmgFCwQA
AHsEGg1+GtAAbQq+CJ4ECAriCQAAUwjJBwAAAAAAAAAAAAAAACYJGgStCKgBuwKhAikCHANqAgAA
jgKgCTYT0ABwCI4FTwNKB+IHAAAYBuwFAAAAAAAAAAAAAAAAlQjsBIAJlAKjAlECqAICA4ECAABj
AxgOehqvAlsBJwGCAl4JpgEAAG4JWAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFdCQ1oPDwUF
DwECDwUFBQUPDwUPBQIBAQUFBQ4PDw8FBQICAg8PBQEPDwUFBQICAQUPDgUPBQUFAQICAQIODg8F
BQUFAgICAgIJAgUFBQIFBQICAgICBQUFBQUFBQUCAgIFBQUFBQUFBQICAgICBQUFBQUFBQICAgUF
BQUFBQUFBQICBQUFBQUFBQUFAgIFBQUFBQVTMDIwODAyMjMwNTU2AAAAOTk5OTo5OTo5OSAwMDow
MDowMAA5OTk5Ojk5Ojk5IDAwOjAwOjAwAAAAAAAKAAAAAgABAAIABAAAAFI5OAACAAcABAAAADAx
MDAAAAAACAADAQMAAQAAAAYAAAASAQMAAQAAAAEAAAAaAQUAAQAAAAgfAAAbAQUAAQAAABAfAAAo
AQMAAQAAAAIAAAABAgQAAQAAABgfAAACAgQAAQAAALYRAAATAgMAAQAAAAIAAAAAAAAASAAAAAEA
AABIAAAAAQAAAP/Y/+AAEEpGSUYAAQEAAAEAAQAA/9sAQwAIBgYHBgUIBwcHCQkICgwUDQwLCwwZ
EhMPFB0aHx4dGhwcICQuJyAiLCMcHCg3KSwwMTQ0NB8nOT04MjwuMzQy/9sAQwEJCQkMCwwYDQ0Y
MiEcITIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy/8AA
EQgAcACWAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIB
AwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBka
JSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SV
lpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX2
9/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAEC
dwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4
OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQAC
EQMRAD8A9bApwFApa0MhcUtJRQMWikozQAtJmkzWFrviiz0VCm4TXRHywqen19KQGtd3tvY27T3M
qxxr1JrmIfHtlJfeU8Dpbk480nJHuRXD6lq1/rFyZrpyVH3UH3V+gqFUXHOQT0B71DnYtRuezxTx
3ESywurxsMhlOQadmvJ9K1680WX90S8JPzQseD9PSvQ9I16z1iHdBIBKB88TH5lqk7ktWNTNZuta
zZ6Fpkt/eyBIoxwO7HsB71oZrwT4weI31LXBpVvITb2fysAeDIev5dKb0EkSf8Jd4o8eeIfsGlSS
2to52usH/LOPPLE16n4d8HaP4ZTNlBvuD9+5mO6Rvx7fhVD4ceHY9A8J2xaILd3S+dOxGDz0H4DF
ddQhsDyKxtU0mG7w+WSRTlJE4ZD6itimsARg02rjjJxd0YMWvS6aPI1lCGH3LiNSVkH9D7UVq7dp
KkAj3oqbPubc9J6uOvk/+AatOptLVHMLRmkzSZoAdmmSSJEhd2CqoyWJwBVHVdYs9HtjNdyhf7qD
lmPoBXmOu+KLzW5fL5itc/LEvf6+tS2NI6DxF46zvtNIbno1x/8AEj+tcppWl3etai0cYllkJzJI
fur7sTWrovhfz7dtRv2eCzj5LY5Yd8VrQQafqbtFYwzW+nwqModytM5Gfn9sY496htvUcXcztU8K
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
wMEbkqP+Yo8dMGDqcDAxdDWV8DAwMSFLbhf/2Q==

------=_NextPart_000_0000_01CAB98C.1FFF1050
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://tuxgraphics.org/common/images2/article09043/avr_programmer.jpg

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
xnkmsWobjn9qQH//2Q==

------=_NextPart_000_0000_01CAB98C.1FFF1050
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://tuxgraphics.org/common/images2/article09043/avrusb500_th.jpg

/9j/4AAQSkZJRgABAQEASABIAAD/4SjBRXhpZgAASUkqAAgAAAALAA8BAgAKAAAAkgAAABABAgAJ
AAAAnAAAABIBAwABAAAAAQAAABoBBQABAAAApgAAABsBBQABAAAArgAAACgBAwABAAAAAgAAADEB
AgAKAAAAtgAAADIBAgAUAAAAwAAAABMCAwABAAAAAgAAAGmHBAABAAAApAEAAKXEBwDQAAAA1AAA
AKIeAABQYW5hc29uaWMARE1DLUZaMTgAAEgAAAABAAAASAAAAAEAAABWZXIuMS4wICAAMjAwOTow
MjoxNCAxMDowODozNQBQcmludElNADAyNTAAAA4AAQAWABYAAgAAAAAAAwBkAAAABwAAAAAACAAA
AAAACQAAAAAACgAAAAAACwCsAAAADAAAAAAADQAAAAAADgDEAAAAAAEFAAAAAQEBAAAAEAGAAAAA
CREAABAnAAALDwAAECcAAJcFAAAQJwAAsAgAABAnAAABHAAAECcAAF4CAAAQJwAAiwAAABAnAADL
AwAAECcAAOUbAAAQJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgCaggUA
AQAAAEIDAACdggUAAQAAAEoDAAAiiAMAAQAAAAIAAAAniAMAAQAAAGQAAAAAkAcABAAAADAyMjED
kAIAFAAAAFIDAAAEkAIAFAAAAGYDAAABkQcABAAAAAECAwACkQUAAQAAAHoDAAAEkgoAAQAAAIID
AAAFkgUAAQAAAIoDAAAHkgMAAQAAAAUAAAAIkgMAAQAAAAAAAAAJkgMAAQAAABAAAAAKkgUAAQAA
AJIDAAB8kgcA4hoAAJoDAAAAoAcABAAAADAxMDABoAMAAQAAAAEAAAACoAQAAQAAAAAKAAADoAQA
AQAAAIAHAAAFoAQAAQAAAIQeAAAXogMAAQAAAAIAAAAAowcAAQAAAAMAAAABowcAAQAAAAEAAAAB
pAMAAQAAAAEAAAACpAMAAQAAAAIAAAADpAMAAQAAAAAAAAAEpAUAAQAAAHweAAAFpAMAAQAAAFoA
AAAGpAMAAQAAAAAAAAAHpAMAAQAAAAAAAAAIpAMAAQAAAAAAAAAJpAMAAQAAAAAAAAAKpAMAAQAA
AAAAAAAAAAAACgAAANAHAAA4AAAACgAAADIwMDk6MDI6MTQgMTA6MDg6MzUAMjAwOTowMjoxNCAx
MDowODozNQAEAAAAAQAAAEIAAABkAAAAHgAAAAoAAAB1AAAACgAAAFBhbmFzb25pYwAAADcAAQAD
AAEAAAACAAAAAgAHAAQAAAAAAQAHAwADAAEAAAABAAAABwADAAEAAAABAAAADwABAAIAAAAQAAAA
GgADAAEAAAACAAAAHAADAAEAAAACAAAAHwADAAEAAAAGAAAAIAADAAEAAAACAAAAIQAHAAgYAACI
BgAAIgADAAEAAAAAAAAAJAADAAEAAAAAAAAAJQAHABAAAACQHgAAJgAHAAQAAAAwMjMwJwADAAEA
AAAAAAAAKAADAAEAAAABAAAAKQAEAAEAAAA5QwAAKgADAAEAAAACAAAAKwAEAAEAAAADAAAALAAD
AAEAAAAAAAAALQADAAEAAAACAAAALgADAAEAAAABAAAALwADAAEAAAABAAAAMAADAAEAAAABAAAA
MQADAAEAAAACAAAAMgADAAEAAAAAAAAAMwACABQAAACgHgAANAADAAEAAAACAAAANQADAAEAAAAB
AAAANgADAAEAAAD//wAANwADAAEAAAABAQAAOAADAAEAAAAEAAAAOQADAAEAAAAAAAAAOgADAAEA
AAABAAAAOwADAAEAAAABAAAAPAADAAEAAABkAAAAPQADAAEAAAABAAAAPgADAAEAAAABAAAAPwAD
AAEAAAAAAAAAQAADAAEAAAAAAAAAQQADAAEAAAAAAAAARgADAAEAAAAAAAAARwADAAEAAAAAAAAA
UAADAAEAAAAAAAAAAIAHAAQAAAAwMTIwAYADAAEAAAAAAAAAAoADAAEAAAABAAAAA4ADAAEAAAAB
AAAABIADAAEAAACtBwAABYADAAEAAAAeBAAABoADAAEAAADiBgAAB4ADAAEAAAABAAAACIADAAEA
AAABAAAACYADAAEAAAABAAAAEIACABQAAAC0HgAARFYBAkVQAADw/0RCaAXw/0FGtgCgrxCBoq8A
BqSvADCmrwAAyq8gALKvAAC0rwAAuq+5/7yvAAC+rwAA+K8AAPqvAACorwEFqq9uGsivIgHYrwYC
tq+UALivAADOrzEB0q+GANCvhgCsrzoCsK9XAK6vXgDUr4YA9K/BAPKv0QDirwAA5K8BAOCvbhrm
rwEA6K8BAOqvAQDsrwAA9q8AANqvAADWrwAA8K+RBQQGkQUKBm4ayAYGBpqvAACcrwAAnq8AAPD/
U1ROAKQGAACmBgAAqAYAAKoGAACsBgAA+gcAAK4GAACwBgAAtgYAALgGAAC6BgAA9AcAAPYHAACy
BgAAtAYAALAEAACyBAAAYKkAAPD/QUXqACAFpQIiBWsCBgWlAu4HpQIkBXkHEAWyBiYFFQHABgAA
KAV4ADoFBwDFGQAAUAWrAlIFzgTKBgwAAAUDADYFAAAIBQAAAgUAAAoFAAAEBQAABAcAAAYHAAAI
BwAACgcAAPIGAAD2Bv8A9AYAAPgG/wAqBVYALAURATIFEQH6BhEB/AYAAAAHAAE7BQYAPgUAAMYZ
gALIGd0DMAWr/xwFKQDoBocmGgXfH+8GAQDwBgEA/gYAAC4FAAABBQAAYAUAADQFAAAOZ/ACOAUA
ABQFOAESBSAAFgUnADwFMwFYBRIAWgWAAPD/V0LqAAAErQcCBOIGXAQeBAQEHAEGBBwBYATQBhoE
kABeBOcAXwQIABIE+wAUBAMBFgQcARgEHQHMBLUEzgSMCdAEEAfSBOcGCAQlAQoEFgG0BPICtgQA
EUAE8AAwBF4AOAR4ADIEgAA6BIAANATg/zwEEAA2BCQAPgQoAEwEIgFOBBYBwAQdAcIEHAHqBAAA
gAXkAIIFkQCDBYsAjAUDAI4FiQCPBYoAUgT2AFQEDgFWBPYAWAQOAdQE9gDWBA4B2AT2ANoEDgHw
BLoE8gRYCPQErAD2BNkA+AQAAPoEAAD8BAAA/gQAAPD/WUPmAE6qCgBQqgoAUqoKAFSqCgBEqjLI
RqrdzEiqzKxKqmgkTKoBADiqHgA6qh4APKoeAD6qHgAuqoiIMKrMiDKqd2Y0qiIRNqoAAIIEAACA
BAwAhAQAAISqYABgqlhYYqpYWGSqf39mqn9/aKojI2qqAQFsqgICbqoAAIaqAACIqgAAiqoYAIyq
GACOqgAAkKoAAJKqGACUqhgAlqoAAJiqAACgqvAAoqoAAKSq6ACmqgAAqKoKAFiqAABaqiAAXKog
AF6qIACaqgAAnKr/AMCqDgDCqg4AxKoOAMaqDgDIqggI8P9DTQ4A/AUIMASsAADw/0lTzgCIrgAA
gK5xA4KujwOErucDhq7nAwCvAAACrwAABK8AAAavAAAIrwAAAK6OAwKukAMErpADBq6QAwiujgMK
rpIDDK6KAw6uigMQrooDEq6EAxSuhAMWrnwDGK5+AxqufgMcrnwDHq54AyCuiAMirpADJK6QAyau
jgMorpQDKq6OAyyukAMurpgDMK6UAzKukAM0rpoDNq6YAziumgM6rpoDPK6WAz6ulgNArvUBQq4A
AESuAABGrgAAYK7qAWKuAABkrgAAZq4AAPD/RkSWAGCsAABirAAAIKwAACKsAAAkrAAAJqwAACis
AAAqrAAALKwAAC6sAAAwrAAAMqwAADSsAAA2rAAAOKwAADqsAAA8rAAAPqwAAECsAABCrAAARKwA
AEasAABIrAAASqwAAEysAABOrAAAUKwAAFKsAABUrAAAVqwAAFisAABarAAAXKwAAF6sAABmBQAA
ZAUAAPD/SUEyAKCp//+iqf//pKn//6ap//+oqf//qqn//6yp//+uqf//gKkAAIKpAACEqQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAQUVCTSMDHwMWAw8DDQMRAw0DXgKjAcIC7wL2AkUDOwMuAyQDIAMZA0UCnQHo
Av4C/gL+AlQDRAM3Ay4DHgMMApYB1wIKAwcDAwMAA1QDQgM2A+EC0wG3AdECFQMVAwgD5wIvAk4D
NQMCAjMBxAHkAhMD5AKSAhwCWgHuAUUDKANHAg0BwAJRAh8B1QBmALMBuALwAjwDMAMEA78C8QGc
AHQApAADAugC+gL2Ai0DJQMGA88BRQHMAEkBRwLcAu4C6wLlAhoDEQP3AkAC1gFYAr4C2gLcAt0C
2ALRAgID/ALxAt4CzALNAtIC0QLLAssCxQK9AusC5gLeAtYCzgLHAsUCwQK8ArkCswKtAtQC0ALI
AsMCvQK4ArQCrwKqAqUCnwKaAlBSU1QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARkNDVgYAAQBuGm4acBoAAAAA
AAAAAAAAAAAAAAAAAACSHKYWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEARRwRAk0EtAHgAdEByAG9
AekBAAA7Aa0CfAXgAAwB7QDqALwBfwEAAKUB6wQAAAAAAAAAAAAAAACxGxgCcASqAccB1QHRAcMB
6gEAAEIBgQNhB9wAKgHjAO0ABQK+AQAAOAITBgAAAAAAAAAAAAAAAB0blwI5BsIBzQHAAc8B4AH4
AQAAgwFPBfsL5ABQAeQA6ACdAiICAABLA3YHAAAAAAAAAAAAAAAAiRoBBR0MzAHiAdkB1QF0Ak0C
AAAbA7QGng/bAH4B6gDqAAgDTAIAACYEaAgAAAAAAAAAAAAAAAD1GYwDbQi4AeoBxwHaAQ8CDwIA
AB4C5AXRDeAAeAHmAOkAxwI0AgAAoQPqBwAAAAAAAAAAAAAAAGEZMQK+BLQB0AHEAcMBxQHrAQAA
QgFRBFsJ3ABCAeUA4wAeAtEBAAC3AsAGAAAAAAAAAAAAAAAAhhr6COoN6AElAuAB7gH2AXoGAADa
BeQHbwwAAfUB7gAAASEE7AcAAHwFvQQAAAAAAAAAAAAAAAAaG8EIgA3HAQgC3AH5AfcBLgYAAAEG
0QeADOgAxQH7AP4ADwTNBwAAgQXfBAAAAAAAAAAAAAAAAK4b4gOGBtkBCQK2AeQBxgEFBAAAegJC
BjEK6ACEAeQA7wBuA/cGAABgBPwDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFdCQ1oCAgIC
AgICAgICAgIFAgICAgICAgICAgIFBQICAgICAgICAgIFBQICAgIBAgICAgIFBQICAgICAgICAgEF
AgIDAgIFBQUCAgIFAgIBAgUGBgYCAgICAgICAgYGBgICAgICAgICAQYGAQICAgICAgICAQECAgIC
AgICAgICAgICAgICAgICAgICAgICAgICAgJTMDIwODAyMjMwNTU2AAAAOTk5OTo5OTo5OSAwMDow
MDowMAA5OTk5Ojk5Ojk5IDAwOjAwOjAwAAAAAAAKAAAAAgABAAIABAAAAFI5OAACAAcABAAAADAx
MDAAAAAACAADAQMAAQAAAAYAAAASAQMAAQAAAAEAAAAaAQUAAQAAAAgfAAAbAQUAAQAAABAfAAAo
AQMAAQAAAAIAAAABAgQAAQAAABgfAAACAgQAAQAAAKEJAAATAgMAAQAAAAIAAAAAAAAASAAAAAEA
AABIAAAAAQAAAP/Y/+AAEEpGSUYAAQEAAAEAAQAA/9sAQwAIBgYHBgUIBwcHCQkICgwUDQwLCwwZ
EhMPFB0aHx4dGhwcICQuJyAiLCMcHCg3KSwwMTQ0NB8nOT04MjwuMzQy/9sAQwEJCQkMCwwYDQ0Y
MiEcITIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy/8AA
EQgAcACWAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIB
AwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBka
JSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SV
lpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX2
9/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAEC
dwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4
OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQAC
EQMRAD8A7nyhR5VWdtJtqbAQeV7Uvlip9tJilYCHy6XZUuKXFFgIwlLtp+KXFOwEeKTbUmKTFMQz
FIRRNKkMZeRgqjqTXNajrzzEx22UTu/c0AXdT1VYAYoSDJ3PZa5WSaS5uDDCcuT+8kPO3/69Igud
RmNvZgnnDy9l+nvXT6ZoMdnEoIyep+tLc0SUdXuVdO08QwhI1IXqSepPqa2YrbaOlWkgVBgCpQoF
Mhu+rIVjxUgWn4oxTENxRTsUUgJcUYp+KTFMBuKTFOxRSAbijFOpKAExS4opruqKWYgKOpNACmqG
oanBYJ85y56IOprL1LxGATFZ4J7yHp+FczPcvJNg7pZn6KOSaLjSb0Rb1HVJbti8z7YxyF7Cl03R
LnVsSS7rezP4PJ/gK0NH8OF3W61HDsOUiH3V+vqa6oKAMAUWKuo7bla0sLexhWK3iVEHYCrOKXFF
MhiUUtFACUUtFACUUtFAE1FFFACUUtJQAlIaGYKCSQAOpNc5qviWOEtDZ4eToX7D/GgDXv8AUrew
j3Sv83ZR1NcdqWs3GoMQTshHRAf51nTXMk8u6Rnllc8DqW+grUsNBeYrLejC9RAD/wChH+lTuWo9
WUbS1uL9sQDbF3mI4/D1rqdJ0WC0G5Vyx6u3JNXbazVAAFAUdAB0q+qhRgU7A5dEAXApcUtFMgSi
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
ASaFChQDP//Z

------=_NextPart_000_0000_01CAB98C.1FFF1050
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://tuxgraphics.org/lightbox2/css/lightbox.css

#lightbox {
	Z-INDEX: 100; POSITION: absolute; TEXT-ALIGN: center; LINE-HEIGHT: 0; =
WIDTH: 100%; LEFT: 0px
}
#lightbox A IMG {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none
}
#outerImageContainer {
	POSITION: relative; BACKGROUND-COLOR: #fff; MARGIN: 0px auto; WIDTH: =
250px; HEIGHT: 250px
}
#imageContainer {
	PADDING-BOTTOM: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
PADDING-TOP: 10px
}
#loading {
	POSITION: absolute; TEXT-ALIGN: center; LINE-HEIGHT: 0; WIDTH: 100%; =
HEIGHT: 25%; TOP: 40%; LEFT: 0%
}
#hoverNav {
	Z-INDEX: 10; POSITION: absolute; WIDTH: 100%; HEIGHT: 100%; TOP: 0px; =
LEFT: 0px
}
#imageContainer > #hoverNav {
	LEFT: 0px
}
#hoverNav A {
	OUTLINE-STYLE: none; OUTLINE-COLOR: invert; OUTLINE-WIDTH: medium
}
#prevLink {
	WIDTH: 49%; DISPLAY: block; BACKGROUND: url(../images/blank.gif) =
no-repeat; HEIGHT: 100%
}
#nextLink {
	WIDTH: 49%; DISPLAY: block; BACKGROUND: url(../images/blank.gif) =
no-repeat; HEIGHT: 100%
}
#prevLink {
	FLOAT: left; LEFT: 0px
}
#nextLink {
	FLOAT: right; RIGHT: 0px
}
#prevLink:hover {
	BACKGROUND: url(../images/prevlabel.gif) no-repeat left 15%
}
#prevLink:hover:visited {
	BACKGROUND: url(../images/prevlabel.gif) no-repeat left 15%
}
#nextLink:hover {
	BACKGROUND: url(../images/nextlabel.gif) no-repeat right 15%
}
#nextLink:hover:visited {
	BACKGROUND: url(../images/nextlabel.gif) no-repeat right 15%
}
#imageDataContainer {
	BACKGROUND-COLOR: #fff; MARGIN: 0px auto; WIDTH: 100%; FONT: 10px/1.4em =
Verdana, Helvetica, sans-serif; OVERFLOW: auto
}
#imageData {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; COLOR: =
#666; PADDING-TOP: 0px
}
#imageData #imageDetails {
	TEXT-ALIGN: left; WIDTH: 70%; FLOAT: left
}
#imageData #caption {
	FONT-WEIGHT: bold
}
#imageData #numberDisplay {
	PADDING-BOTTOM: 1em; DISPLAY: block; CLEAR: left
}
#imageData #bottomNavClose {
	PADDING-BOTTOM: 0.7em; WIDTH: 66px; FLOAT: right
}
#overlay {
	Z-INDEX: 90; POSITION: absolute; BACKGROUND-COLOR: #000; WIDTH: 100%; =
HEIGHT: 500px; TOP: 0px; LEFT: 0px
}

------=_NextPart_000_0000_01CAB98C.1FFF1050
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://tuxgraphics.org/lightbox2/js/prototype.js

/*  Prototype JavaScript framework, version 1.4.0=0A=
 *  (c) 2005 Sam Stephenson <sam@conio.net>=0A=
 *=0A=
 *  THIS FILE IS AUTOMATICALLY GENERATED. When sending patches, please =
diff=0A=
 *  against the source tree, available from the Prototype darcs =
repository.=0A=
 *=0A=
 *  Prototype is freely distributable under the terms of an MIT-style =
license.=0A=
 *=0A=
 *  For details, see the Prototype web site: http://prototype.conio.net/=0A=
 *=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Prototype =3D {=0A=
  Version: '1.4.0',=0A=
  ScriptFragment: '(?:<script.*?>)((\n|\r|.)*?)(?:<\/script>)',=0A=
=0A=
  emptyFunction: function() {},=0A=
  K: function(x) {return x}=0A=
}=0A=
=0A=
var Class =3D {=0A=
  create: function() {=0A=
    return function() {=0A=
      this.initialize.apply(this, arguments);=0A=
    }=0A=
  }=0A=
}=0A=
=0A=
var Abstract =3D new Object();=0A=
=0A=
Object.extend =3D function(destination, source) {=0A=
  for (property in source) {=0A=
    destination[property] =3D source[property];=0A=
  }=0A=
  return destination;=0A=
}=0A=
=0A=
Object.inspect =3D function(object) {=0A=
  try {=0A=
    if (object =3D=3D undefined) return 'undefined';=0A=
    if (object =3D=3D null) return 'null';=0A=
    return object.inspect ? object.inspect() : object.toString();=0A=
  } catch (e) {=0A=
    if (e instanceof RangeError) return '...';=0A=
    throw e;=0A=
  }=0A=
}=0A=
=0A=
Function.prototype.bind =3D function() {=0A=
  var __method =3D this, args =3D $A(arguments), object =3D args.shift();=0A=
  return function() {=0A=
    return __method.apply(object, args.concat($A(arguments)));=0A=
  }=0A=
}=0A=
=0A=
Function.prototype.bindAsEventListener =3D function(object) {=0A=
  var __method =3D this;=0A=
  return function(event) {=0A=
    return __method.call(object, event || window.event);=0A=
  }=0A=
}=0A=
=0A=
Object.extend(Number.prototype, {=0A=
  toColorPart: function() {=0A=
    var digits =3D this.toString(16);=0A=
    if (this < 16) return '0' + digits;=0A=
    return digits;=0A=
  },=0A=
=0A=
  succ: function() {=0A=
    return this + 1;=0A=
  },=0A=
=0A=
  times: function(iterator) {=0A=
    $R(0, this, true).each(iterator);=0A=
    return this;=0A=
  }=0A=
});=0A=
=0A=
var Try =3D {=0A=
  these: function() {=0A=
    var returnValue;=0A=
=0A=
    for (var i =3D 0; i < arguments.length; i++) {=0A=
      var lambda =3D arguments[i];=0A=
      try {=0A=
        returnValue =3D lambda();=0A=
        break;=0A=
      } catch (e) {}=0A=
    }=0A=
=0A=
    return returnValue;=0A=
  }=0A=
}=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var PeriodicalExecuter =3D Class.create();=0A=
PeriodicalExecuter.prototype =3D {=0A=
  initialize: function(callback, frequency) {=0A=
    this.callback =3D callback;=0A=
    this.frequency =3D frequency;=0A=
    this.currentlyExecuting =3D false;=0A=
=0A=
    this.registerCallback();=0A=
  },=0A=
=0A=
  registerCallback: function() {=0A=
    setInterval(this.onTimerEvent.bind(this), this.frequency * 1000);=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    if (!this.currentlyExecuting) {=0A=
      try {=0A=
        this.currentlyExecuting =3D true;=0A=
        this.callback();=0A=
      } finally {=0A=
        this.currentlyExecuting =3D false;=0A=
      }=0A=
    }=0A=
  }=0A=
}=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
function $() {=0A=
  var elements =3D new Array();=0A=
=0A=
  for (var i =3D 0; i < arguments.length; i++) {=0A=
    var element =3D arguments[i];=0A=
    if (typeof element =3D=3D 'string')=0A=
      element =3D document.getElementById(element);=0A=
=0A=
    if (arguments.length =3D=3D 1)=0A=
      return element;=0A=
=0A=
    elements.push(element);=0A=
  }=0A=
=0A=
  return elements;=0A=
}=0A=
Object.extend(String.prototype, {=0A=
  stripTags: function() {=0A=
    return this.replace(/<\/?[^>]+>/gi, '');=0A=
  },=0A=
=0A=
  stripScripts: function() {=0A=
    return this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');=0A=
  },=0A=
=0A=
  extractScripts: function() {=0A=
    var matchAll =3D new RegExp(Prototype.ScriptFragment, 'img');=0A=
    var matchOne =3D new RegExp(Prototype.ScriptFragment, 'im');=0A=
    return (this.match(matchAll) || []).map(function(scriptTag) {=0A=
      return (scriptTag.match(matchOne) || ['', ''])[1];=0A=
    });=0A=
  },=0A=
=0A=
  evalScripts: function() {=0A=
    return this.extractScripts().map(eval);=0A=
  },=0A=
=0A=
  escapeHTML: function() {=0A=
    var div =3D document.createElement('div');=0A=
    var text =3D document.createTextNode(this);=0A=
    div.appendChild(text);=0A=
    return div.innerHTML;=0A=
  },=0A=
=0A=
  unescapeHTML: function() {=0A=
    var div =3D document.createElement('div');=0A=
    div.innerHTML =3D this.stripTags();=0A=
    return div.childNodes[0] ? div.childNodes[0].nodeValue : '';=0A=
  },=0A=
=0A=
  toQueryParams: function() {=0A=
    var pairs =3D this.match(/^\??(.*)$/)[1].split('&');=0A=
    return pairs.inject({}, function(params, pairString) {=0A=
      var pair =3D pairString.split('=3D');=0A=
      params[pair[0]] =3D pair[1];=0A=
      return params;=0A=
    });=0A=
  },=0A=
=0A=
  toArray: function() {=0A=
    return this.split('');=0A=
  },=0A=
=0A=
  camelize: function() {=0A=
    var oStringList =3D this.split('-');=0A=
    if (oStringList.length =3D=3D 1) return oStringList[0];=0A=
=0A=
    var camelizedString =3D this.indexOf('-') =3D=3D 0=0A=
      ? oStringList[0].charAt(0).toUpperCase() + =
oStringList[0].substring(1)=0A=
      : oStringList[0];=0A=
=0A=
    for (var i =3D 1, len =3D oStringList.length; i < len; i++) {=0A=
      var s =3D oStringList[i];=0A=
      camelizedString +=3D s.charAt(0).toUpperCase() + s.substring(1);=0A=
    }=0A=
=0A=
    return camelizedString;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return "'" + this.replace('\\', '\\\\').replace("'", '\\\'') + "'";=0A=
  }=0A=
});=0A=
=0A=
String.prototype.parseQuery =3D String.prototype.toQueryParams;=0A=
=0A=
var $break    =3D new Object();=0A=
var $continue =3D new Object();=0A=
=0A=
var Enumerable =3D {=0A=
  each: function(iterator) {=0A=
    var index =3D 0;=0A=
    try {=0A=
      this._each(function(value) {=0A=
        try {=0A=
          iterator(value, index++);=0A=
        } catch (e) {=0A=
          if (e !=3D $continue) throw e;=0A=
        }=0A=
      });=0A=
    } catch (e) {=0A=
      if (e !=3D $break) throw e;=0A=
    }=0A=
  },=0A=
=0A=
  all: function(iterator) {=0A=
    var result =3D true;=0A=
    this.each(function(value, index) {=0A=
      result =3D result && !!(iterator || Prototype.K)(value, index);=0A=
      if (!result) throw $break;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  any: function(iterator) {=0A=
    var result =3D true;=0A=
    this.each(function(value, index) {=0A=
      if (result =3D !!(iterator || Prototype.K)(value, index))=0A=
        throw $break;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  collect: function(iterator) {=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      results.push(iterator(value, index));=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  detect: function (iterator) {=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      if (iterator(value, index)) {=0A=
        result =3D value;=0A=
        throw $break;=0A=
      }=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  findAll: function(iterator) {=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      if (iterator(value, index))=0A=
        results.push(value);=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  grep: function(pattern, iterator) {=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      var stringValue =3D value.toString();=0A=
      if (stringValue.match(pattern))=0A=
        results.push((iterator || Prototype.K)(value, index));=0A=
    })=0A=
    return results;=0A=
  },=0A=
=0A=
  include: function(object) {=0A=
    var found =3D false;=0A=
    this.each(function(value) {=0A=
      if (value =3D=3D object) {=0A=
        found =3D true;=0A=
        throw $break;=0A=
      }=0A=
    });=0A=
    return found;=0A=
  },=0A=
=0A=
  inject: function(memo, iterator) {=0A=
    this.each(function(value, index) {=0A=
      memo =3D iterator(memo, value, index);=0A=
    });=0A=
    return memo;=0A=
  },=0A=
=0A=
  invoke: function(method) {=0A=
    var args =3D $A(arguments).slice(1);=0A=
    return this.collect(function(value) {=0A=
      return value[method].apply(value, args);=0A=
    });=0A=
  },=0A=
=0A=
  max: function(iterator) {=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      value =3D (iterator || Prototype.K)(value, index);=0A=
      if (value >=3D (result || value))=0A=
        result =3D value;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  min: function(iterator) {=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      value =3D (iterator || Prototype.K)(value, index);=0A=
      if (value <=3D (result || value))=0A=
        result =3D value;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  partition: function(iterator) {=0A=
    var trues =3D [], falses =3D [];=0A=
    this.each(function(value, index) {=0A=
      ((iterator || Prototype.K)(value, index) ?=0A=
        trues : falses).push(value);=0A=
    });=0A=
    return [trues, falses];=0A=
  },=0A=
=0A=
  pluck: function(property) {=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      results.push(value[property]);=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  reject: function(iterator) {=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      if (!iterator(value, index))=0A=
        results.push(value);=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  sortBy: function(iterator) {=0A=
    return this.collect(function(value, index) {=0A=
      return {value: value, criteria: iterator(value, index)};=0A=
    }).sort(function(left, right) {=0A=
      var a =3D left.criteria, b =3D right.criteria;=0A=
      return a < b ? -1 : a > b ? 1 : 0;=0A=
    }).pluck('value');=0A=
  },=0A=
=0A=
  toArray: function() {=0A=
    return this.collect(Prototype.K);=0A=
  },=0A=
=0A=
  zip: function() {=0A=
    var iterator =3D Prototype.K, args =3D $A(arguments);=0A=
    if (typeof args.last() =3D=3D 'function')=0A=
      iterator =3D args.pop();=0A=
=0A=
    var collections =3D [this].concat(args).map($A);=0A=
    return this.map(function(value, index) {=0A=
      iterator(value =3D collections.pluck(index));=0A=
      return value;=0A=
    });=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return '#<Enumerable:' + this.toArray().inspect() + '>';=0A=
  }=0A=
}=0A=
=0A=
Object.extend(Enumerable, {=0A=
  map:     Enumerable.collect,=0A=
  find:    Enumerable.detect,=0A=
  select:  Enumerable.findAll,=0A=
  member:  Enumerable.include,=0A=
  entries: Enumerable.toArray=0A=
});=0A=
var $A =3D Array.from =3D function(iterable) {=0A=
  if (!iterable) return [];=0A=
  if (iterable.toArray) {=0A=
    return iterable.toArray();=0A=
  } else {=0A=
    var results =3D [];=0A=
    for (var i =3D 0; i < iterable.length; i++)=0A=
      results.push(iterable[i]);=0A=
    return results;=0A=
  }=0A=
}=0A=
=0A=
Object.extend(Array.prototype, Enumerable);=0A=
=0A=
Array.prototype._reverse =3D Array.prototype.reverse;=0A=
=0A=
Object.extend(Array.prototype, {=0A=
  _each: function(iterator) {=0A=
    for (var i =3D 0; i < this.length; i++)=0A=
      iterator(this[i]);=0A=
  },=0A=
=0A=
  clear: function() {=0A=
    this.length =3D 0;=0A=
    return this;=0A=
  },=0A=
=0A=
  first: function() {=0A=
    return this[0];=0A=
  },=0A=
=0A=
  last: function() {=0A=
    return this[this.length - 1];=0A=
  },=0A=
=0A=
  compact: function() {=0A=
    return this.select(function(value) {=0A=
      return value !=3D undefined || value !=3D null;=0A=
    });=0A=
  },=0A=
=0A=
  flatten: function() {=0A=
    return this.inject([], function(array, value) {=0A=
      return array.concat(value.constructor =3D=3D Array ?=0A=
        value.flatten() : [value]);=0A=
    });=0A=
  },=0A=
=0A=
  without: function() {=0A=
    var values =3D $A(arguments);=0A=
    return this.select(function(value) {=0A=
      return !values.include(value);=0A=
    });=0A=
  },=0A=
=0A=
  indexOf: function(object) {=0A=
    for (var i =3D 0; i < this.length; i++)=0A=
      if (this[i] =3D=3D object) return i;=0A=
    return -1;=0A=
  },=0A=
=0A=
  reverse: function(inline) {=0A=
    return (inline !=3D=3D false ? this : this.toArray())._reverse();=0A=
  },=0A=
=0A=
  shift: function() {=0A=
    var result =3D this[0];=0A=
    for (var i =3D 0; i < this.length - 1; i++)=0A=
      this[i] =3D this[i + 1];=0A=
    this.length--;=0A=
    return result;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return '[' + this.map(Object.inspect).join(', ') + ']';=0A=
  }=0A=
});=0A=
var Hash =3D {=0A=
  _each: function(iterator) {=0A=
    for (key in this) {=0A=
      var value =3D this[key];=0A=
      if (typeof value =3D=3D 'function') continue;=0A=
=0A=
      var pair =3D [key, value];=0A=
      pair.key =3D key;=0A=
      pair.value =3D value;=0A=
      iterator(pair);=0A=
    }=0A=
  },=0A=
=0A=
  keys: function() {=0A=
    return this.pluck('key');=0A=
  },=0A=
=0A=
  values: function() {=0A=
    return this.pluck('value');=0A=
  },=0A=
=0A=
  merge: function(hash) {=0A=
    return $H(hash).inject($H(this), function(mergedHash, pair) {=0A=
      mergedHash[pair.key] =3D pair.value;=0A=
      return mergedHash;=0A=
    });=0A=
  },=0A=
=0A=
  toQueryString: function() {=0A=
    return this.map(function(pair) {=0A=
      return pair.map(encodeURIComponent).join('=3D');=0A=
    }).join('&');=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return '#<Hash:{' + this.map(function(pair) {=0A=
      return pair.map(Object.inspect).join(': ');=0A=
    }).join(', ') + '}>';=0A=
  }=0A=
}=0A=
=0A=
function $H(object) {=0A=
  var hash =3D Object.extend({}, object || {});=0A=
  Object.extend(hash, Enumerable);=0A=
  Object.extend(hash, Hash);=0A=
  return hash;=0A=
}=0A=
ObjectRange =3D Class.create();=0A=
Object.extend(ObjectRange.prototype, Enumerable);=0A=
Object.extend(ObjectRange.prototype, {=0A=
  initialize: function(start, end, exclusive) {=0A=
    this.start =3D start;=0A=
    this.end =3D end;=0A=
    this.exclusive =3D exclusive;=0A=
  },=0A=
=0A=
  _each: function(iterator) {=0A=
    var value =3D this.start;=0A=
    do {=0A=
      iterator(value);=0A=
      value =3D value.succ();=0A=
    } while (this.include(value));=0A=
  },=0A=
=0A=
  include: function(value) {=0A=
    if (value < this.start)=0A=
      return false;=0A=
    if (this.exclusive)=0A=
      return value < this.end;=0A=
    return value <=3D this.end;=0A=
  }=0A=
});=0A=
=0A=
var $R =3D function(start, end, exclusive) {=0A=
  return new ObjectRange(start, end, exclusive);=0A=
}=0A=
=0A=
var Ajax =3D {=0A=
  getTransport: function() {=0A=
    return Try.these(=0A=
      function() {return new ActiveXObject('Msxml2.XMLHTTP')},=0A=
      function() {return new ActiveXObject('Microsoft.XMLHTTP')},=0A=
      function() {return new XMLHttpRequest()}=0A=
    ) || false;=0A=
  },=0A=
=0A=
  activeRequestCount: 0=0A=
}=0A=
=0A=
Ajax.Responders =3D {=0A=
  responders: [],=0A=
=0A=
  _each: function(iterator) {=0A=
    this.responders._each(iterator);=0A=
  },=0A=
=0A=
  register: function(responderToAdd) {=0A=
    if (!this.include(responderToAdd))=0A=
      this.responders.push(responderToAdd);=0A=
  },=0A=
=0A=
  unregister: function(responderToRemove) {=0A=
    this.responders =3D this.responders.without(responderToRemove);=0A=
  },=0A=
=0A=
  dispatch: function(callback, request, transport, json) {=0A=
    this.each(function(responder) {=0A=
      if (responder[callback] && typeof responder[callback] =3D=3D =
'function') {=0A=
        try {=0A=
          responder[callback].apply(responder, [request, transport, =
json]);=0A=
        } catch (e) {}=0A=
      }=0A=
    });=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Ajax.Responders, Enumerable);=0A=
=0A=
Ajax.Responders.register({=0A=
  onCreate: function() {=0A=
    Ajax.activeRequestCount++;=0A=
  },=0A=
=0A=
  onComplete: function() {=0A=
    Ajax.activeRequestCount--;=0A=
  }=0A=
});=0A=
=0A=
Ajax.Base =3D function() {};=0A=
Ajax.Base.prototype =3D {=0A=
  setOptions: function(options) {=0A=
    this.options =3D {=0A=
      method:       'post',=0A=
      asynchronous: true,=0A=
      parameters:   ''=0A=
    }=0A=
    Object.extend(this.options, options || {});=0A=
  },=0A=
=0A=
  responseIsSuccess: function() {=0A=
    return this.transport.status =3D=3D undefined=0A=
        || this.transport.status =3D=3D 0=0A=
        || (this.transport.status >=3D 200 && this.transport.status < =
300);=0A=
  },=0A=
=0A=
  responseIsFailure: function() {=0A=
    return !this.responseIsSuccess();=0A=
  }=0A=
}=0A=
=0A=
Ajax.Request =3D Class.create();=0A=
Ajax.Request.Events =3D=0A=
  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];=0A=
=0A=
Ajax.Request.prototype =3D Object.extend(new Ajax.Base(), {=0A=
  initialize: function(url, options) {=0A=
    this.transport =3D Ajax.getTransport();=0A=
    this.setOptions(options);=0A=
    this.request(url);=0A=
  },=0A=
=0A=
  request: function(url) {=0A=
    var parameters =3D this.options.parameters || '';=0A=
    if (parameters.length > 0) parameters +=3D '&_=3D';=0A=
=0A=
    try {=0A=
      this.url =3D url;=0A=
      if (this.options.method =3D=3D 'get' && parameters.length > 0)=0A=
        this.url +=3D (this.url.match(/\?/) ? '&' : '?') + parameters;=0A=
=0A=
      Ajax.Responders.dispatch('onCreate', this, this.transport);=0A=
=0A=
      this.transport.open(this.options.method, this.url,=0A=
        this.options.asynchronous);=0A=
=0A=
      if (this.options.asynchronous) {=0A=
        this.transport.onreadystatechange =3D =
this.onStateChange.bind(this);=0A=
        setTimeout((function() =
{this.respondToReadyState(1)}).bind(this), 10);=0A=
      }=0A=
=0A=
      this.setRequestHeaders();=0A=
=0A=
      var body =3D this.options.postBody ? this.options.postBody : =
parameters;=0A=
      this.transport.send(this.options.method =3D=3D 'post' ? body : =
null);=0A=
=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  setRequestHeaders: function() {=0A=
    var requestHeaders =3D=0A=
      ['X-Requested-With', 'XMLHttpRequest',=0A=
       'X-Prototype-Version', Prototype.Version];=0A=
=0A=
    if (this.options.method =3D=3D 'post') {=0A=
      requestHeaders.push('Content-type',=0A=
        'application/x-www-form-urlencoded');=0A=
=0A=
      /* Force "Connection: close" for Mozilla browsers to work around=0A=
       * a bug where XMLHttpReqeuest sends an incorrect Content-length=0A=
       * header. See Mozilla Bugzilla #246651.=0A=
       */=0A=
      if (this.transport.overrideMimeType)=0A=
        requestHeaders.push('Connection', 'close');=0A=
    }=0A=
=0A=
    if (this.options.requestHeaders)=0A=
      requestHeaders.push.apply(requestHeaders, =
this.options.requestHeaders);=0A=
=0A=
    for (var i =3D 0; i < requestHeaders.length; i +=3D 2)=0A=
      this.transport.setRequestHeader(requestHeaders[i], =
requestHeaders[i+1]);=0A=
  },=0A=
=0A=
  onStateChange: function() {=0A=
    var readyState =3D this.transport.readyState;=0A=
    if (readyState !=3D 1)=0A=
      this.respondToReadyState(this.transport.readyState);=0A=
  },=0A=
=0A=
  header: function(name) {=0A=
    try {=0A=
      return this.transport.getResponseHeader(name);=0A=
    } catch (e) {}=0A=
  },=0A=
=0A=
  evalJSON: function() {=0A=
    try {=0A=
      return eval(this.header('X-JSON'));=0A=
    } catch (e) {}=0A=
  },=0A=
=0A=
  evalResponse: function() {=0A=
    try {=0A=
      return eval(this.transport.responseText);=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  respondToReadyState: function(readyState) {=0A=
    var event =3D Ajax.Request.Events[readyState];=0A=
    var transport =3D this.transport, json =3D this.evalJSON();=0A=
=0A=
    if (event =3D=3D 'Complete') {=0A=
      try {=0A=
        (this.options['on' + this.transport.status]=0A=
         || this.options['on' + (this.responseIsSuccess() ? 'Success' : =
'Failure')]=0A=
         || Prototype.emptyFunction)(transport, json);=0A=
      } catch (e) {=0A=
        this.dispatchException(e);=0A=
      }=0A=
=0A=
      if ((this.header('Content-type') || =
'').match(/^text\/javascript/i))=0A=
        this.evalResponse();=0A=
    }=0A=
=0A=
    try {=0A=
      (this.options['on' + event] || Prototype.emptyFunction)(transport, =
json);=0A=
      Ajax.Responders.dispatch('on' + event, this, transport, json);=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
=0A=
    /* Avoid memory leak in MSIE: clean up the oncomplete event handler =
*/=0A=
    if (event =3D=3D 'Complete')=0A=
      this.transport.onreadystatechange =3D Prototype.emptyFunction;=0A=
  },=0A=
=0A=
  dispatchException: function(exception) {=0A=
    (this.options.onException || Prototype.emptyFunction)(this, =
exception);=0A=
    Ajax.Responders.dispatch('onException', this, exception);=0A=
  }=0A=
});=0A=
=0A=
Ajax.Updater =3D Class.create();=0A=
=0A=
Object.extend(Object.extend(Ajax.Updater.prototype, =
Ajax.Request.prototype), {=0A=
  initialize: function(container, url, options) {=0A=
    this.containers =3D {=0A=
      success: container.success ? $(container.success) : $(container),=0A=
      failure: container.failure ? $(container.failure) :=0A=
        (container.success ? null : $(container))=0A=
    }=0A=
=0A=
    this.transport =3D Ajax.getTransport();=0A=
    this.setOptions(options);=0A=
=0A=
    var onComplete =3D this.options.onComplete || =
Prototype.emptyFunction;=0A=
    this.options.onComplete =3D (function(transport, object) {=0A=
      this.updateContent();=0A=
      onComplete(transport, object);=0A=
    }).bind(this);=0A=
=0A=
    this.request(url);=0A=
  },=0A=
=0A=
  updateContent: function() {=0A=
    var receiver =3D this.responseIsSuccess() ?=0A=
      this.containers.success : this.containers.failure;=0A=
    var response =3D this.transport.responseText;=0A=
=0A=
    if (!this.options.evalScripts)=0A=
      response =3D response.stripScripts();=0A=
=0A=
    if (receiver) {=0A=
      if (this.options.insertion) {=0A=
        new this.options.insertion(receiver, response);=0A=
      } else {=0A=
        Element.update(receiver, response);=0A=
      }=0A=
    }=0A=
=0A=
    if (this.responseIsSuccess()) {=0A=
      if (this.onComplete)=0A=
        setTimeout(this.onComplete.bind(this), 10);=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Ajax.PeriodicalUpdater =3D Class.create();=0A=
Ajax.PeriodicalUpdater.prototype =3D Object.extend(new Ajax.Base(), {=0A=
  initialize: function(container, url, options) {=0A=
    this.setOptions(options);=0A=
    this.onComplete =3D this.options.onComplete;=0A=
=0A=
    this.frequency =3D (this.options.frequency || 2);=0A=
    this.decay =3D (this.options.decay || 1);=0A=
=0A=
    this.updater =3D {};=0A=
    this.container =3D container;=0A=
    this.url =3D url;=0A=
=0A=
    this.start();=0A=
  },=0A=
=0A=
  start: function() {=0A=
    this.options.onComplete =3D this.updateComplete.bind(this);=0A=
    this.onTimerEvent();=0A=
  },=0A=
=0A=
  stop: function() {=0A=
    this.updater.onComplete =3D undefined;=0A=
    clearTimeout(this.timer);=0A=
    (this.onComplete || Prototype.emptyFunction).apply(this, arguments);=0A=
  },=0A=
=0A=
  updateComplete: function(request) {=0A=
    if (this.options.decay) {=0A=
      this.decay =3D (request.responseText =3D=3D this.lastText ?=0A=
        this.decay * this.options.decay : 1);=0A=
=0A=
      this.lastText =3D request.responseText;=0A=
    }=0A=
    this.timer =3D setTimeout(this.onTimerEvent.bind(this),=0A=
      this.decay * this.frequency * 1000);=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    this.updater =3D new Ajax.Updater(this.container, this.url, =
this.options);=0A=
  }=0A=
});=0A=
document.getElementsByClassName =3D function(className, parentElement) {=0A=
  var children =3D ($(parentElement) || =
document.body).getElementsByTagName('*');=0A=
  return $A(children).inject([], function(elements, child) {=0A=
    if (child.className.match(new RegExp("(^|\\s)" + className + =
"(\\s|$)")))=0A=
      elements.push(child);=0A=
    return elements;=0A=
  });=0A=
}=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
if (!window.Element) {=0A=
  var Element =3D new Object();=0A=
}=0A=
=0A=
Object.extend(Element, {=0A=
  visible: function(element) {=0A=
    return $(element).style.display !=3D 'none';=0A=
  },=0A=
=0A=
  toggle: function() {=0A=
    for (var i =3D 0; i < arguments.length; i++) {=0A=
      var element =3D $(arguments[i]);=0A=
      Element[Element.visible(element) ? 'hide' : 'show'](element);=0A=
    }=0A=
  },=0A=
=0A=
  hide: function() {=0A=
    for (var i =3D 0; i < arguments.length; i++) {=0A=
      var element =3D $(arguments[i]);=0A=
      element.style.display =3D 'none';=0A=
    }=0A=
  },=0A=
=0A=
  show: function() {=0A=
    for (var i =3D 0; i < arguments.length; i++) {=0A=
      var element =3D $(arguments[i]);=0A=
      element.style.display =3D '';=0A=
    }=0A=
  },=0A=
=0A=
  remove: function(element) {=0A=
    element =3D $(element);=0A=
    element.parentNode.removeChild(element);=0A=
  },=0A=
=0A=
  update: function(element, html) {=0A=
    $(element).innerHTML =3D html.stripScripts();=0A=
    setTimeout(function() {html.evalScripts()}, 10);=0A=
  },=0A=
=0A=
  getHeight: function(element) {=0A=
    element =3D $(element);=0A=
    return element.offsetHeight;=0A=
  },=0A=
=0A=
  classNames: function(element) {=0A=
    return new Element.ClassNames(element);=0A=
  },=0A=
=0A=
  hasClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    return Element.classNames(element).include(className);=0A=
  },=0A=
=0A=
  addClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    return Element.classNames(element).add(className);=0A=
  },=0A=
=0A=
  removeClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    return Element.classNames(element).remove(className);=0A=
  },=0A=
=0A=
  // removes whitespace-only text node children=0A=
  cleanWhitespace: function(element) {=0A=
    element =3D $(element);=0A=
    for (var i =3D 0; i < element.childNodes.length; i++) {=0A=
      var node =3D element.childNodes[i];=0A=
      if (node.nodeType =3D=3D 3 && !/\S/.test(node.nodeValue))=0A=
        Element.remove(node);=0A=
    }=0A=
  },=0A=
=0A=
  empty: function(element) {=0A=
    return $(element).innerHTML.match(/^\s*$/);=0A=
  },=0A=
=0A=
  scrollTo: function(element) {=0A=
    element =3D $(element);=0A=
    var x =3D element.x ? element.x : element.offsetLeft,=0A=
        y =3D element.y ? element.y : element.offsetTop;=0A=
    window.scrollTo(x, y);=0A=
  },=0A=
=0A=
  getStyle: function(element, style) {=0A=
    element =3D $(element);=0A=
    var value =3D element.style[style.camelize()];=0A=
    if (!value) {=0A=
      if (document.defaultView && document.defaultView.getComputedStyle) =
{=0A=
        var css =3D document.defaultView.getComputedStyle(element, null);=0A=
        value =3D css ? css.getPropertyValue(style) : null;=0A=
      } else if (element.currentStyle) {=0A=
        value =3D element.currentStyle[style.camelize()];=0A=
      }=0A=
    }=0A=
=0A=
    if (window.opera && ['left', 'top', 'right', =
'bottom'].include(style))=0A=
      if (Element.getStyle(element, 'position') =3D=3D 'static') value =
=3D 'auto';=0A=
=0A=
    return value =3D=3D 'auto' ? null : value;=0A=
  },=0A=
=0A=
  setStyle: function(element, style) {=0A=
    element =3D $(element);=0A=
    for (name in style)=0A=
      element.style[name.camelize()] =3D style[name];=0A=
  },=0A=
=0A=
  getDimensions: function(element) {=0A=
    element =3D $(element);=0A=
    if (Element.getStyle(element, 'display') !=3D 'none')=0A=
      return {width: element.offsetWidth, height: element.offsetHeight};=0A=
=0A=
    // All *Width and *Height properties give 0 on elements with display =
none,=0A=
    // so enable the element temporarily=0A=
    var els =3D element.style;=0A=
    var originalVisibility =3D els.visibility;=0A=
    var originalPosition =3D els.position;=0A=
    els.visibility =3D 'hidden';=0A=
    els.position =3D 'absolute';=0A=
    els.display =3D '';=0A=
    var originalWidth =3D element.clientWidth;=0A=
    var originalHeight =3D element.clientHeight;=0A=
    els.display =3D 'none';=0A=
    els.position =3D originalPosition;=0A=
    els.visibility =3D originalVisibility;=0A=
    return {width: originalWidth, height: originalHeight};=0A=
  },=0A=
=0A=
  makePositioned: function(element) {=0A=
    element =3D $(element);=0A=
    var pos =3D Element.getStyle(element, 'position');=0A=
    if (pos =3D=3D 'static' || !pos) {=0A=
      element._madePositioned =3D true;=0A=
      element.style.position =3D 'relative';=0A=
      // Opera returns the offset relative to the positioning context, =
when an=0A=
      // element is position relative but top and left have not been =
defined=0A=
      if (window.opera) {=0A=
        element.style.top =3D 0;=0A=
        element.style.left =3D 0;=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  undoPositioned: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._madePositioned) {=0A=
      element._madePositioned =3D undefined;=0A=
      element.style.position =3D=0A=
        element.style.top =3D=0A=
        element.style.left =3D=0A=
        element.style.bottom =3D=0A=
        element.style.right =3D '';=0A=
    }=0A=
  },=0A=
=0A=
  makeClipping: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._overflow) return;=0A=
    element._overflow =3D element.style.overflow;=0A=
    if ((Element.getStyle(element, 'overflow') || 'visible') !=3D =
'hidden')=0A=
      element.style.overflow =3D 'hidden';=0A=
  },=0A=
=0A=
  undoClipping: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._overflow) return;=0A=
    element.style.overflow =3D element._overflow;=0A=
    element._overflow =3D undefined;=0A=
  }=0A=
});=0A=
=0A=
var Toggle =3D new Object();=0A=
Toggle.display =3D Element.toggle;=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Abstract.Insertion =3D function(adjacency) {=0A=
  this.adjacency =3D adjacency;=0A=
}=0A=
=0A=
Abstract.Insertion.prototype =3D {=0A=
  initialize: function(element, content) {=0A=
    this.element =3D $(element);=0A=
    this.content =3D content.stripScripts();=0A=
=0A=
    if (this.adjacency && this.element.insertAdjacentHTML) {=0A=
      try {=0A=
        this.element.insertAdjacentHTML(this.adjacency, this.content);=0A=
      } catch (e) {=0A=
        if (this.element.tagName.toLowerCase() =3D=3D 'tbody') {=0A=
          this.insertContent(this.contentFromAnonymousTable());=0A=
        } else {=0A=
          throw e;=0A=
        }=0A=
      }=0A=
    } else {=0A=
      this.range =3D this.element.ownerDocument.createRange();=0A=
      if (this.initializeRange) this.initializeRange();=0A=
      =
this.insertContent([this.range.createContextualFragment(this.content)]);=0A=
    }=0A=
=0A=
    setTimeout(function() {content.evalScripts()}, 10);=0A=
  },=0A=
=0A=
  contentFromAnonymousTable: function() {=0A=
    var div =3D document.createElement('div');=0A=
    div.innerHTML =3D '<table><tbody>' + this.content + =
'</tbody></table>';=0A=
    return $A(div.childNodes[0].childNodes[0].childNodes);=0A=
  }=0A=
}=0A=
=0A=
var Insertion =3D new Object();=0A=
=0A=
Insertion.Before =3D Class.create();=0A=
Insertion.Before.prototype =3D Object.extend(new =
Abstract.Insertion('beforeBegin'), {=0A=
  initializeRange: function() {=0A=
    this.range.setStartBefore(this.element);=0A=
  },=0A=
=0A=
  insertContent: function(fragments) {=0A=
    fragments.each((function(fragment) {=0A=
      this.element.parentNode.insertBefore(fragment, this.element);=0A=
    }).bind(this));=0A=
  }=0A=
});=0A=
=0A=
Insertion.Top =3D Class.create();=0A=
Insertion.Top.prototype =3D Object.extend(new =
Abstract.Insertion('afterBegin'), {=0A=
  initializeRange: function() {=0A=
    this.range.selectNodeContents(this.element);=0A=
    this.range.collapse(true);=0A=
  },=0A=
=0A=
  insertContent: function(fragments) {=0A=
    fragments.reverse(false).each((function(fragment) {=0A=
      this.element.insertBefore(fragment, this.element.firstChild);=0A=
    }).bind(this));=0A=
  }=0A=
});=0A=
=0A=
Insertion.Bottom =3D Class.create();=0A=
Insertion.Bottom.prototype =3D Object.extend(new =
Abstract.Insertion('beforeEnd'), {=0A=
  initializeRange: function() {=0A=
    this.range.selectNodeContents(this.element);=0A=
    this.range.collapse(this.element);=0A=
  },=0A=
=0A=
  insertContent: function(fragments) {=0A=
    fragments.each((function(fragment) {=0A=
      this.element.appendChild(fragment);=0A=
    }).bind(this));=0A=
  }=0A=
});=0A=
=0A=
Insertion.After =3D Class.create();=0A=
Insertion.After.prototype =3D Object.extend(new =
Abstract.Insertion('afterEnd'), {=0A=
  initializeRange: function() {=0A=
    this.range.setStartAfter(this.element);=0A=
  },=0A=
=0A=
  insertContent: function(fragments) {=0A=
    fragments.each((function(fragment) {=0A=
      this.element.parentNode.insertBefore(fragment,=0A=
        this.element.nextSibling);=0A=
    }).bind(this));=0A=
  }=0A=
});=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.ClassNames =3D Class.create();=0A=
Element.ClassNames.prototype =3D {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
  },=0A=
=0A=
  _each: function(iterator) {=0A=
    this.element.className.split(/\s+/).select(function(name) {=0A=
      return name.length > 0;=0A=
    })._each(iterator);=0A=
  },=0A=
=0A=
  set: function(className) {=0A=
    this.element.className =3D className;=0A=
  },=0A=
=0A=
  add: function(classNameToAdd) {=0A=
    if (this.include(classNameToAdd)) return;=0A=
    this.set(this.toArray().concat(classNameToAdd).join(' '));=0A=
  },=0A=
=0A=
  remove: function(classNameToRemove) {=0A=
    if (!this.include(classNameToRemove)) return;=0A=
    this.set(this.select(function(className) {=0A=
      return className !=3D classNameToRemove;=0A=
    }).join(' '));=0A=
  },=0A=
=0A=
  toString: function() {=0A=
    return this.toArray().join(' ');=0A=
  }=0A=
}=0A=
=0A=
Object.extend(Element.ClassNames.prototype, Enumerable);=0A=
var Field =3D {=0A=
  clear: function() {=0A=
    for (var i =3D 0; i < arguments.length; i++)=0A=
      $(arguments[i]).value =3D '';=0A=
  },=0A=
=0A=
  focus: function(element) {=0A=
    $(element).focus();=0A=
  },=0A=
=0A=
  present: function() {=0A=
    for (var i =3D 0; i < arguments.length; i++)=0A=
      if ($(arguments[i]).value =3D=3D '') return false;=0A=
    return true;=0A=
  },=0A=
=0A=
  select: function(element) {=0A=
    $(element).select();=0A=
  },=0A=
=0A=
  activate: function(element) {=0A=
    element =3D $(element);=0A=
    element.focus();=0A=
    if (element.select)=0A=
      element.select();=0A=
  }=0A=
}=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Form =3D {=0A=
  serialize: function(form) {=0A=
    var elements =3D Form.getElements($(form));=0A=
    var queryComponents =3D new Array();=0A=
=0A=
    for (var i =3D 0; i < elements.length; i++) {=0A=
      var queryComponent =3D Form.Element.serialize(elements[i]);=0A=
      if (queryComponent)=0A=
        queryComponents.push(queryComponent);=0A=
    }=0A=
=0A=
    return queryComponents.join('&');=0A=
  },=0A=
=0A=
  getElements: function(form) {=0A=
    form =3D $(form);=0A=
    var elements =3D new Array();=0A=
=0A=
    for (tagName in Form.Element.Serializers) {=0A=
      var tagElements =3D form.getElementsByTagName(tagName);=0A=
      for (var j =3D 0; j < tagElements.length; j++)=0A=
        elements.push(tagElements[j]);=0A=
    }=0A=
    return elements;=0A=
  },=0A=
=0A=
  getInputs: function(form, typeName, name) {=0A=
    form =3D $(form);=0A=
    var inputs =3D form.getElementsByTagName('input');=0A=
=0A=
    if (!typeName && !name)=0A=
      return inputs;=0A=
=0A=
    var matchingInputs =3D new Array();=0A=
    for (var i =3D 0; i < inputs.length; i++) {=0A=
      var input =3D inputs[i];=0A=
      if ((typeName && input.type !=3D typeName) ||=0A=
          (name && input.name !=3D name))=0A=
        continue;=0A=
      matchingInputs.push(input);=0A=
    }=0A=
=0A=
    return matchingInputs;=0A=
  },=0A=
=0A=
  disable: function(form) {=0A=
    var elements =3D Form.getElements(form);=0A=
    for (var i =3D 0; i < elements.length; i++) {=0A=
      var element =3D elements[i];=0A=
      element.blur();=0A=
      element.disabled =3D 'true';=0A=
    }=0A=
  },=0A=
=0A=
  enable: function(form) {=0A=
    var elements =3D Form.getElements(form);=0A=
    for (var i =3D 0; i < elements.length; i++) {=0A=
      var element =3D elements[i];=0A=
      element.disabled =3D '';=0A=
    }=0A=
  },=0A=
=0A=
  findFirstElement: function(form) {=0A=
    return Form.getElements(form).find(function(element) {=0A=
      return element.type !=3D 'hidden' && !element.disabled &&=0A=
        ['input', 'select', =
'textarea'].include(element.tagName.toLowerCase());=0A=
    });=0A=
  },=0A=
=0A=
  focusFirstElement: function(form) {=0A=
    Field.activate(Form.findFirstElement(form));=0A=
  },=0A=
=0A=
  reset: function(form) {=0A=
    $(form).reset();=0A=
  }=0A=
}=0A=
=0A=
Form.Element =3D {=0A=
  serialize: function(element) {=0A=
    element =3D $(element);=0A=
    var method =3D element.tagName.toLowerCase();=0A=
    var parameter =3D Form.Element.Serializers[method](element);=0A=
=0A=
    if (parameter) {=0A=
      var key =3D encodeURIComponent(parameter[0]);=0A=
      if (key.length =3D=3D 0) return;=0A=
=0A=
      if (parameter[1].constructor !=3D Array)=0A=
        parameter[1] =3D [parameter[1]];=0A=
=0A=
      return parameter[1].map(function(value) {=0A=
        return key + '=3D' + encodeURIComponent(value);=0A=
      }).join('&');=0A=
    }=0A=
  },=0A=
=0A=
  getValue: function(element) {=0A=
    element =3D $(element);=0A=
    var method =3D element.tagName.toLowerCase();=0A=
    var parameter =3D Form.Element.Serializers[method](element);=0A=
=0A=
    if (parameter)=0A=
      return parameter[1];=0A=
  }=0A=
}=0A=
=0A=
Form.Element.Serializers =3D {=0A=
  input: function(element) {=0A=
    switch (element.type.toLowerCase()) {=0A=
      case 'submit':=0A=
      case 'hidden':=0A=
      case 'password':=0A=
      case 'text':=0A=
        return Form.Element.Serializers.textarea(element);=0A=
      case 'checkbox':=0A=
      case 'radio':=0A=
        return Form.Element.Serializers.inputSelector(element);=0A=
    }=0A=
    return false;=0A=
  },=0A=
=0A=
  inputSelector: function(element) {=0A=
    if (element.checked)=0A=
      return [element.name, element.value];=0A=
  },=0A=
=0A=
  textarea: function(element) {=0A=
    return [element.name, element.value];=0A=
  },=0A=
=0A=
  select: function(element) {=0A=
    return Form.Element.Serializers[element.type =3D=3D 'select-one' ?=0A=
      'selectOne' : 'selectMany'](element);=0A=
  },=0A=
=0A=
  selectOne: function(element) {=0A=
    var value =3D '', opt, index =3D element.selectedIndex;=0A=
    if (index >=3D 0) {=0A=
      opt =3D element.options[index];=0A=
      value =3D opt.value;=0A=
      if (!value && !('value' in opt))=0A=
        value =3D opt.text;=0A=
    }=0A=
    return [element.name, value];=0A=
  },=0A=
=0A=
  selectMany: function(element) {=0A=
    var value =3D new Array();=0A=
    for (var i =3D 0; i < element.length; i++) {=0A=
      var opt =3D element.options[i];=0A=
      if (opt.selected) {=0A=
        var optValue =3D opt.value;=0A=
        if (!optValue && !('value' in opt))=0A=
          optValue =3D opt.text;=0A=
        value.push(optValue);=0A=
      }=0A=
    }=0A=
    return [element.name, value];=0A=
  }=0A=
}=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var $F =3D Form.Element.getValue;=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Abstract.TimedObserver =3D function() {}=0A=
Abstract.TimedObserver.prototype =3D {=0A=
  initialize: function(element, frequency, callback) {=0A=
    this.frequency =3D frequency;=0A=
    this.element   =3D $(element);=0A=
    this.callback  =3D callback;=0A=
=0A=
    this.lastValue =3D this.getValue();=0A=
    this.registerCallback();=0A=
  },=0A=
=0A=
  registerCallback: function() {=0A=
    setInterval(this.onTimerEvent.bind(this), this.frequency * 1000);=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    var value =3D this.getValue();=0A=
    if (this.lastValue !=3D value) {=0A=
      this.callback(this.element, value);=0A=
      this.lastValue =3D value;=0A=
    }=0A=
  }=0A=
}=0A=
=0A=
Form.Element.Observer =3D Class.create();=0A=
Form.Element.Observer.prototype =3D Object.extend(new =
Abstract.TimedObserver(), {=0A=
  getValue: function() {=0A=
    return Form.Element.getValue(this.element);=0A=
  }=0A=
});=0A=
=0A=
Form.Observer =3D Class.create();=0A=
Form.Observer.prototype =3D Object.extend(new Abstract.TimedObserver(), {=0A=
  getValue: function() {=0A=
    return Form.serialize(this.element);=0A=
  }=0A=
});=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Abstract.EventObserver =3D function() {}=0A=
Abstract.EventObserver.prototype =3D {=0A=
  initialize: function(element, callback) {=0A=
    this.element  =3D $(element);=0A=
    this.callback =3D callback;=0A=
=0A=
    this.lastValue =3D this.getValue();=0A=
    if (this.element.tagName.toLowerCase() =3D=3D 'form')=0A=
      this.registerFormCallbacks();=0A=
    else=0A=
      this.registerCallback(this.element);=0A=
  },=0A=
=0A=
  onElementEvent: function() {=0A=
    var value =3D this.getValue();=0A=
    if (this.lastValue !=3D value) {=0A=
      this.callback(this.element, value);=0A=
      this.lastValue =3D value;=0A=
    }=0A=
  },=0A=
=0A=
  registerFormCallbacks: function() {=0A=
    var elements =3D Form.getElements(this.element);=0A=
    for (var i =3D 0; i < elements.length; i++)=0A=
      this.registerCallback(elements[i]);=0A=
  },=0A=
=0A=
  registerCallback: function(element) {=0A=
    if (element.type) {=0A=
      switch (element.type.toLowerCase()) {=0A=
        case 'checkbox':=0A=
        case 'radio':=0A=
          Event.observe(element, 'click', =
this.onElementEvent.bind(this));=0A=
          break;=0A=
        case 'password':=0A=
        case 'text':=0A=
        case 'textarea':=0A=
        case 'select-one':=0A=
        case 'select-multiple':=0A=
          Event.observe(element, 'change', =
this.onElementEvent.bind(this));=0A=
          break;=0A=
      }=0A=
    }=0A=
  }=0A=
}=0A=
=0A=
Form.Element.EventObserver =3D Class.create();=0A=
Form.Element.EventObserver.prototype =3D Object.extend(new =
Abstract.EventObserver(), {=0A=
  getValue: function() {=0A=
    return Form.Element.getValue(this.element);=0A=
  }=0A=
});=0A=
=0A=
Form.EventObserver =3D Class.create();=0A=
Form.EventObserver.prototype =3D Object.extend(new =
Abstract.EventObserver(), {=0A=
  getValue: function() {=0A=
    return Form.serialize(this.element);=0A=
  }=0A=
});=0A=
if (!window.Event) {=0A=
  var Event =3D new Object();=0A=
}=0A=
=0A=
Object.extend(Event, {=0A=
  KEY_BACKSPACE: 8,=0A=
  KEY_TAB:       9,=0A=
  KEY_RETURN:   13,=0A=
  KEY_ESC:      27,=0A=
  KEY_LEFT:     37,=0A=
  KEY_UP:       38,=0A=
  KEY_RIGHT:    39,=0A=
  KEY_DOWN:     40,=0A=
  KEY_DELETE:   46,=0A=
=0A=
  element: function(event) {=0A=
    return event.target || event.srcElement;=0A=
  },=0A=
=0A=
  isLeftClick: function(event) {=0A=
    return (((event.which) && (event.which =3D=3D 1)) ||=0A=
            ((event.button) && (event.button =3D=3D 1)));=0A=
  },=0A=
=0A=
  pointerX: function(event) {=0A=
    return event.pageX || (event.clientX +=0A=
      (document.documentElement.scrollLeft || document.body.scrollLeft));=0A=
  },=0A=
=0A=
  pointerY: function(event) {=0A=
    return event.pageY || (event.clientY +=0A=
      (document.documentElement.scrollTop || document.body.scrollTop));=0A=
  },=0A=
=0A=
  stop: function(event) {=0A=
    if (event.preventDefault) {=0A=
      event.preventDefault();=0A=
      event.stopPropagation();=0A=
    } else {=0A=
      event.returnValue =3D false;=0A=
      event.cancelBubble =3D true;=0A=
    }=0A=
  },=0A=
=0A=
  // find the first node with the given tagName, starting from the=0A=
  // node the event was triggered on; traverses the DOM upwards=0A=
  findElement: function(event, tagName) {=0A=
    var element =3D Event.element(event);=0A=
    while (element.parentNode && (!element.tagName ||=0A=
        (element.tagName.toUpperCase() !=3D tagName.toUpperCase())))=0A=
      element =3D element.parentNode;=0A=
    return element;=0A=
  },=0A=
=0A=
  observers: false,=0A=
=0A=
  _observeAndCache: function(element, name, observer, useCapture) {=0A=
    if (!this.observers) this.observers =3D [];=0A=
    if (element.addEventListener) {=0A=
      this.observers.push([element, name, observer, useCapture]);=0A=
      element.addEventListener(name, observer, useCapture);=0A=
    } else if (element.attachEvent) {=0A=
      this.observers.push([element, name, observer, useCapture]);=0A=
      element.attachEvent('on' + name, observer);=0A=
    }=0A=
  },=0A=
=0A=
  unloadCache: function() {=0A=
    if (!Event.observers) return;=0A=
    for (var i =3D 0; i < Event.observers.length; i++) {=0A=
      Event.stopObserving.apply(this, Event.observers[i]);=0A=
      Event.observers[i][0] =3D null;=0A=
    }=0A=
    Event.observers =3D false;=0A=
  },=0A=
=0A=
  observe: function(element, name, observer, useCapture) {=0A=
    var element =3D $(element);=0A=
    useCapture =3D useCapture || false;=0A=
=0A=
    if (name =3D=3D 'keypress' &&=0A=
        (navigator.appVersion.match(/Konqueror|Safari|KHTML/)=0A=
        || element.attachEvent))=0A=
      name =3D 'keydown';=0A=
=0A=
    this._observeAndCache(element, name, observer, useCapture);=0A=
  },=0A=
=0A=
  stopObserving: function(element, name, observer, useCapture) {=0A=
    var element =3D $(element);=0A=
    useCapture =3D useCapture || false;=0A=
=0A=
    if (name =3D=3D 'keypress' &&=0A=
        (navigator.appVersion.match(/Konqueror|Safari|KHTML/)=0A=
        || element.detachEvent))=0A=
      name =3D 'keydown';=0A=
=0A=
    if (element.removeEventListener) {=0A=
      element.removeEventListener(name, observer, useCapture);=0A=
    } else if (element.detachEvent) {=0A=
      element.detachEvent('on' + name, observer);=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
/* prevent memory leaks in IE */=0A=
Event.observe(window, 'unload', Event.unloadCache, false);=0A=
var Position =3D {=0A=
  // set to true if needed, warning: firefox performance problems=0A=
  // NOT neeeded for page scrolling, only if draggable contained in=0A=
  // scrollable elements=0A=
  includeScrollOffsets: false,=0A=
=0A=
  // must be called before calling withinIncludingScrolloffset, every =
time the=0A=
  // page is scrolled=0A=
  prepare: function() {=0A=
    this.deltaX =3D  window.pageXOffset=0A=
                || document.documentElement.scrollLeft=0A=
                || document.body.scrollLeft=0A=
                || 0;=0A=
    this.deltaY =3D  window.pageYOffset=0A=
                || document.documentElement.scrollTop=0A=
                || document.body.scrollTop=0A=
                || 0;=0A=
  },=0A=
=0A=
  realOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.scrollTop  || 0;=0A=
      valueL +=3D element.scrollLeft || 0;=0A=
      element =3D element.parentNode;=0A=
    } while (element);=0A=
    return [valueL, valueT];=0A=
  },=0A=
=0A=
  cumulativeOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      element =3D element.offsetParent;=0A=
    } while (element);=0A=
    return [valueL, valueT];=0A=
  },=0A=
=0A=
  positionedOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      element =3D element.offsetParent;=0A=
      if (element) {=0A=
        p =3D Element.getStyle(element, 'position');=0A=
        if (p =3D=3D 'relative' || p =3D=3D 'absolute') break;=0A=
      }=0A=
    } while (element);=0A=
    return [valueL, valueT];=0A=
  },=0A=
=0A=
  offsetParent: function(element) {=0A=
    if (element.offsetParent) return element.offsetParent;=0A=
    if (element =3D=3D document.body) return element;=0A=
=0A=
    while ((element =3D element.parentNode) && element !=3D =
document.body)=0A=
      if (Element.getStyle(element, 'position') !=3D 'static')=0A=
        return element;=0A=
=0A=
    return document.body;=0A=
  },=0A=
=0A=
  // caches x/y coordinate pair to use with overlap=0A=
  within: function(element, x, y) {=0A=
    if (this.includeScrollOffsets)=0A=
      return this.withinIncludingScrolloffsets(element, x, y);=0A=
    this.xcomp =3D x;=0A=
    this.ycomp =3D y;=0A=
    this.offset =3D this.cumulativeOffset(element);=0A=
=0A=
    return (y >=3D this.offset[1] &&=0A=
            y <  this.offset[1] + element.offsetHeight &&=0A=
            x >=3D this.offset[0] &&=0A=
            x <  this.offset[0] + element.offsetWidth);=0A=
  },=0A=
=0A=
  withinIncludingScrolloffsets: function(element, x, y) {=0A=
    var offsetcache =3D this.realOffset(element);=0A=
=0A=
    this.xcomp =3D x + offsetcache[0] - this.deltaX;=0A=
    this.ycomp =3D y + offsetcache[1] - this.deltaY;=0A=
    this.offset =3D this.cumulativeOffset(element);=0A=
=0A=
    return (this.ycomp >=3D this.offset[1] &&=0A=
            this.ycomp <  this.offset[1] + element.offsetHeight &&=0A=
            this.xcomp >=3D this.offset[0] &&=0A=
            this.xcomp <  this.offset[0] + element.offsetWidth);=0A=
  },=0A=
=0A=
  // within must be called directly before=0A=
  overlap: function(mode, element) {=0A=
    if (!mode) return 0;=0A=
    if (mode =3D=3D 'vertical')=0A=
      return ((this.offset[1] + element.offsetHeight) - this.ycomp) /=0A=
        element.offsetHeight;=0A=
    if (mode =3D=3D 'horizontal')=0A=
      return ((this.offset[0] + element.offsetWidth) - this.xcomp) /=0A=
        element.offsetWidth;=0A=
  },=0A=
=0A=
  clone: function(source, target) {=0A=
    source =3D $(source);=0A=
    target =3D $(target);=0A=
    target.style.position =3D 'absolute';=0A=
    var offsets =3D this.cumulativeOffset(source);=0A=
    target.style.top    =3D offsets[1] + 'px';=0A=
    target.style.left   =3D offsets[0] + 'px';=0A=
    target.style.width  =3D source.offsetWidth + 'px';=0A=
    target.style.height =3D source.offsetHeight + 'px';=0A=
  },=0A=
=0A=
  page: function(forElement) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
=0A=
    var element =3D forElement;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
=0A=
      // Safari fix=0A=
      if (element.offsetParent=3D=3Ddocument.body)=0A=
        if (Element.getStyle(element,'position')=3D=3D'absolute') break;=0A=
=0A=
    } while (element =3D element.offsetParent);=0A=
=0A=
    element =3D forElement;=0A=
    do {=0A=
      valueT -=3D element.scrollTop  || 0;=0A=
      valueL -=3D element.scrollLeft || 0;=0A=
    } while (element =3D element.parentNode);=0A=
=0A=
    return [valueL, valueT];=0A=
  },=0A=
=0A=
  clone: function(source, target) {=0A=
    var options =3D Object.extend({=0A=
      setLeft:    true,=0A=
      setTop:     true,=0A=
      setWidth:   true,=0A=
      setHeight:  true,=0A=
      offsetTop:  0,=0A=
      offsetLeft: 0=0A=
    }, arguments[2] || {})=0A=
=0A=
    // find page position of source=0A=
    source =3D $(source);=0A=
    var p =3D Position.page(source);=0A=
=0A=
    // find coordinate system to use=0A=
    target =3D $(target);=0A=
    var delta =3D [0, 0];=0A=
    var parent =3D null;=0A=
    // delta [0,0] will do fine with position: fixed elements,=0A=
    // position:absolute needs offsetParent deltas=0A=
    if (Element.getStyle(target,'position') =3D=3D 'absolute') {=0A=
      parent =3D Position.offsetParent(target);=0A=
      delta =3D Position.page(parent);=0A=
    }=0A=
=0A=
    // correct by body offsets (fixes Safari)=0A=
    if (parent =3D=3D document.body) {=0A=
      delta[0] -=3D document.body.offsetLeft;=0A=
      delta[1] -=3D document.body.offsetTop;=0A=
    }=0A=
=0A=
    // set position=0A=
    if(options.setLeft)   target.style.left  =3D (p[0] - delta[0] + =
options.offsetLeft) + 'px';=0A=
    if(options.setTop)    target.style.top   =3D (p[1] - delta[1] + =
options.offsetTop) + 'px';=0A=
    if(options.setWidth)  target.style.width =3D source.offsetWidth + =
'px';=0A=
    if(options.setHeight) target.style.height =3D source.offsetHeight + =
'px';=0A=
  },=0A=
=0A=
  absolutize: function(element) {=0A=
    element =3D $(element);=0A=
    if (element.style.position =3D=3D 'absolute') return;=0A=
    Position.prepare();=0A=
=0A=
    var offsets =3D Position.positionedOffset(element);=0A=
    var top     =3D offsets[1];=0A=
    var left    =3D offsets[0];=0A=
    var width   =3D element.clientWidth;=0A=
    var height  =3D element.clientHeight;=0A=
=0A=
    element._originalLeft   =3D left - parseFloat(element.style.left  || =
0);=0A=
    element._originalTop    =3D top  - parseFloat(element.style.top || =
0);=0A=
    element._originalWidth  =3D element.style.width;=0A=
    element._originalHeight =3D element.style.height;=0A=
=0A=
    element.style.position =3D 'absolute';=0A=
    element.style.top    =3D top + 'px';;=0A=
    element.style.left   =3D left + 'px';;=0A=
    element.style.width  =3D width + 'px';;=0A=
    element.style.height =3D height + 'px';;=0A=
  },=0A=
=0A=
  relativize: function(element) {=0A=
    element =3D $(element);=0A=
    if (element.style.position =3D=3D 'relative') return;=0A=
    Position.prepare();=0A=
=0A=
    element.style.position =3D 'relative';=0A=
    var top  =3D parseFloat(element.style.top  || 0) - =
(element._originalTop || 0);=0A=
    var left =3D parseFloat(element.style.left || 0) - =
(element._originalLeft || 0);=0A=
=0A=
    element.style.top    =3D top + 'px';=0A=
    element.style.left   =3D left + 'px';=0A=
    element.style.height =3D element._originalHeight;=0A=
    element.style.width  =3D element._originalWidth;=0A=
  }=0A=
}=0A=
=0A=
// Safari returns margins on body which is incorrect if the child is =
absolutely=0A=
// positioned.  For performance reasons, redefine =
Position.cumulativeOffset for=0A=
// KHTML/WebKit only.=0A=
if (/Konqueror|Safari|KHTML/.test(navigator.userAgent)) {=0A=
  Position.cumulativeOffset =3D function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      if (element.offsetParent =3D=3D document.body)=0A=
        if (Element.getStyle(element, 'position') =3D=3D 'absolute') =
break;=0A=
=0A=
      element =3D element.offsetParent;=0A=
    } while (element);=0A=
=0A=
    return [valueL, valueT];=0A=
  }=0A=
}
------=_NextPart_000_0000_01CAB98C.1FFF1050
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://tuxgraphics.org/lightbox2/js/scriptaculous.js?load=effects

// Copyright (c) 2005 Thomas Fuchs (http://script.aculo.us, =
http://mir.aculo.us)=0A=
// =0A=
// Permission is hereby granted, free of charge, to any person obtaining=0A=
// a copy of this software and associated documentation files (the=0A=
// "Software"), to deal in the Software without restriction, including=0A=
// without limitation the rights to use, copy, modify, merge, publish,=0A=
// distribute, sublicense, and/or sell copies of the Software, and to=0A=
// permit persons to whom the Software is furnished to do so, subject to=0A=
// the following conditions:=0A=
// =0A=
// The above copyright notice and this permission notice shall be=0A=
// included in all copies or substantial portions of the Software.=0A=
//=0A=
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,=0A=
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF=0A=
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND=0A=
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE=0A=
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION=0A=
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION=0A=
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.=0A=
=0A=
var Scriptaculous =3D {=0A=
  Version: '1.5.1',=0A=
  require: function(libraryName) {=0A=
    // inserting via DOM fails in Safari 2.0, so brute force approach=0A=
    document.write('<script type=3D"text/javascript" =
src=3D"'+libraryName+'"></script>');=0A=
  },=0A=
  load: function() {=0A=
    if((typeof Prototype=3D=3D'undefined') ||=0A=
      parseFloat(Prototype.Version.split(".")[0] + "." +=0A=
                 Prototype.Version.split(".")[1]) < 1.4)=0A=
      throw("script.aculo.us requires the Prototype JavaScript framework =
>=3D 1.4.0");=0A=
    =0A=
    $A(document.getElementsByTagName("script")).findAll( function(s) {=0A=
      return (s.src && s.src.match(/scriptaculous\.js(\?.*)?$/))=0A=
    }).each( function(s) {=0A=
      var path =3D s.src.replace(/scriptaculous\.js(\?.*)?$/,'');=0A=
      var includes =3D s.src.match(/\?.*load=3D([a-z,]*)/);=0A=
      (includes ? includes[1] : =
'builder,effects,dragdrop,controls,slider').split(',').each(=0A=
       function(include) { Scriptaculous.require(path+include+'.js') });=0A=
    });=0A=
  }=0A=
}=0A=
=0A=
Scriptaculous.load();
------=_NextPart_000_0000_01CAB98C.1FFF1050
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://tuxgraphics.org/lightbox2/js/lightbox.js

// =
-------------------------------------------------------------------------=
----------=0A=
//=0A=
//	Lightbox v2.03.2=0A=
//	by Lokesh Dhakar - http://www.huddletogether.com=0A=
//	4/30/06=0A=
//=0A=
//	For more information on this script, visit:=0A=
//	http://huddletogether.com/projects/lightbox2/=0A=
//=0A=
//	Licensed under the Creative Commons Attribution 2.5 License - =
http://creativecommons.org/licenses/by/2.5/=0A=
//	=0A=
//	Credit also due to those who have helped, inspired, and made their =
code available to the public.=0A=
//	Including: Scott Upton(uptonic.com), Peter-Paul Koch(quirksmode.org), =
Thomas Fuchs(mir.aculo.us), and others.=0A=
//=0A=
//=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
/*=0A=
=0A=
	Table of Contents=0A=
	-----------------=0A=
	Configuration=0A=
	Global Variables=0A=
=0A=
	Extending Built-in Objects	=0A=
	- Object.extend(Element)=0A=
	- Array.prototype.removeDuplicates()=0A=
	- Array.prototype.empty()=0A=
=0A=
	Lightbox Class Declaration=0A=
	- initialize()=0A=
	- start()=0A=
	- changeImage()=0A=
	- resizeImageContainer()=0A=
	- showImage()=0A=
	- updateDetails()=0A=
	- updateNav()=0A=
	- enableKeyboardNav()=0A=
	- disableKeyboardNav()=0A=
	- keyboardAction()=0A=
	- preloadNeighborImages()=0A=
	- end()=0A=
	=0A=
	Miscellaneous Functions=0A=
	- getPageScroll()=0A=
	- getPageSize()=0A=
	- getKey()=0A=
	- listenKey()=0A=
	- showSelectBoxes()=0A=
	- hideSelectBoxes()=0A=
	- showFlash()=0A=
	- hideFlash()=0A=
	- pause()=0A=
	- initLightbox()=0A=
	=0A=
	Function Calls=0A=
	- addLoadEvent(initLightbox)=0A=
	=0A=
*/=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
=0A=
//=0A=
//	Configuration=0A=
//=0A=
var fileLoadingImage =3D "../../lightbox2/images/loading.gif";		=0A=
var fileBottomNavCloseImage =3D "../../lightbox2/images/closelabel.gif";=0A=
=0A=
var overlayOpacity =3D 0.4;	// controls transparency of shadow overlay=0A=
=0A=
var animate =3D true;			// toggles resizing animations=0A=
var resizeSpeed =3D 7;		// controls the speed of the image resizing =
animations (1=3Dslowest and 10=3Dfastest)=0A=
=0A=
var borderSize =3D 10;		//if you adjust the padding in the CSS, you will =
need to update this variable=0A=
=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
=0A=
//=0A=
//	Global Variables=0A=
//=0A=
var imageArray =3D new Array;=0A=
var activeImage;=0A=
=0A=
if(animate =3D=3D true){=0A=
	overlayDuration =3D 0.2;	// shadow fade in/out duration=0A=
	if(resizeSpeed > 10){ resizeSpeed =3D 10;}=0A=
	if(resizeSpeed < 1){ resizeSpeed =3D 1;}=0A=
	resizeDuration =3D (11 - resizeSpeed) * 0.15;=0A=
} else { =0A=
	overlayDuration =3D 0;=0A=
	resizeDuration =3D 0;=0A=
}=0A=
=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
=0A=
//=0A=
//	Additional methods for Element added by SU, Couloir=0A=
//	- further additions by Lokesh Dhakar (huddletogether.com)=0A=
//=0A=
Object.extend(Element, {=0A=
	getWidth: function(element) {=0A=
	   	element =3D $(element);=0A=
	   	return element.offsetWidth; =0A=
	},=0A=
	setWidth: function(element,w) {=0A=
	   	element =3D $(element);=0A=
    	element.style.width =3D w +"px";=0A=
	},=0A=
	setHeight: function(element,h) {=0A=
   		element =3D $(element);=0A=
    	element.style.height =3D h +"px";=0A=
	},=0A=
	setTop: function(element,t) {=0A=
	   	element =3D $(element);=0A=
    	element.style.top =3D t +"px";=0A=
	},=0A=
	setSrc: function(element,src) {=0A=
    	element =3D $(element);=0A=
    	element.src =3D src; =0A=
	},=0A=
	setHref: function(element,href) {=0A=
    	element =3D $(element);=0A=
    	element.href =3D href; =0A=
	},=0A=
	setInnerHTML: function(element,content) {=0A=
		element =3D $(element);=0A=
		element.innerHTML =3D content;=0A=
	}=0A=
});=0A=
=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
=0A=
//=0A=
//	Extending built-in Array object=0A=
//	- array.removeDuplicates()=0A=
//	- array.empty()=0A=
//=0A=
Array.prototype.removeDuplicates =3D function () {=0A=
    for(i =3D 0; i < this.length; i++){=0A=
        for(j =3D this.length-1; j>i; j--){        =0A=
            if(this[i][0] =3D=3D this[j][0]){=0A=
                this.splice(j,1);=0A=
            }=0A=
        }=0A=
    }=0A=
}=0A=
=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
=0A=
Array.prototype.empty =3D function () {=0A=
	for(i =3D 0; i <=3D this.length; i++){=0A=
		this.shift();=0A=
	}=0A=
}=0A=
=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
=0A=
//=0A=
//	Lightbox Class Declaration=0A=
//	- initialize()=0A=
//	- start()=0A=
//	- changeImage()=0A=
//	- resizeImageContainer()=0A=
//	- showImage()=0A=
//	- updateDetails()=0A=
//	- updateNav()=0A=
//	- enableKeyboardNav()=0A=
//	- disableKeyboardNav()=0A=
//	- keyboardNavAction()=0A=
//	- preloadNeighborImages()=0A=
//	- end()=0A=
//=0A=
//	Structuring of code inspired by Scott Upton (http://www.uptonic.com/)=0A=
//=0A=
var Lightbox =3D Class.create();=0A=
=0A=
Lightbox.prototype =3D {=0A=
	=0A=
	// initialize()=0A=
	// Constructor runs on completion of the DOM loading. Loops through =
anchor tags looking for =0A=
	// 'lightbox' references and applies onclick events to appropriate =
links. The 2nd section of=0A=
	// the function inserts html at the bottom of the page which is used to =
display the shadow =0A=
	// overlay and the image container.=0A=
	//=0A=
	initialize: function() {	=0A=
		if (!document.getElementsByTagName){ return; }=0A=
		var anchors =3D document.getElementsByTagName('a');=0A=
		var areas =3D document.getElementsByTagName('area');=0A=
=0A=
		// loop through all anchor tags=0A=
		for (var i=3D0; i<anchors.length; i++){=0A=
			var anchor =3D anchors[i];=0A=
			=0A=
			var relAttribute =3D String(anchor.getAttribute('rel'));=0A=
			=0A=
			// use the string.match() method to catch 'lightbox' references in =
the rel attribute=0A=
			if (anchor.getAttribute('href') && =
(relAttribute.toLowerCase().match('lightbox'))){=0A=
				anchor.onclick =3D function () {myLightbox.start(this); return =
false;}=0A=
			}=0A=
		}=0A=
=0A=
		// loop through all area tags=0A=
		// todo: combine anchor & area tag loops=0A=
		for (var i=3D0; i< areas.length; i++){=0A=
			var area =3D areas[i];=0A=
			=0A=
			var relAttribute =3D String(area.getAttribute('rel'));=0A=
			=0A=
			// use the string.match() method to catch 'lightbox' references in =
the rel attribute=0A=
			if (area.getAttribute('href') && =
(relAttribute.toLowerCase().match('lightbox'))){=0A=
				area.onclick =3D function () {myLightbox.start(this); return false;}=0A=
			}=0A=
		}=0A=
=0A=
		// The rest of this code inserts html at the bottom of the page that =
looks similar to this:=0A=
		//=0A=
		//	<div id=3D"overlay"></div>=0A=
		//	<div id=3D"lightbox">=0A=
		//		<div id=3D"outerImageContainer">=0A=
		//			<div id=3D"imageContainer">=0A=
		//				<img id=3D"lightboxImage">=0A=
		//				<div style=3D"" id=3D"hoverNav">=0A=
		//					<a href=3D"#" id=3D"prevLink"></a>=0A=
		//					<a href=3D"#" id=3D"nextLink"></a>=0A=
		//				</div>=0A=
		//				<div id=3D"loading">=0A=
		//					<a href=3D"#" id=3D"loadingLink">=0A=
		//						<img src=3D"images/loading.gif">=0A=
		//					</a>=0A=
		//				</div>=0A=
		//			</div>=0A=
		//		</div>=0A=
		//		<div id=3D"imageDataContainer">=0A=
		//			<div id=3D"imageData">=0A=
		//				<div id=3D"imageDetails">=0A=
		//					<span id=3D"caption"></span>=0A=
		//					<span id=3D"numberDisplay"></span>=0A=
		//				</div>=0A=
		//				<div id=3D"bottomNav">=0A=
		//					<a href=3D"#" id=3D"bottomNavClose">=0A=
		//						<img src=3D"images/close.gif">=0A=
		//					</a>=0A=
		//				</div>=0A=
		//			</div>=0A=
		//		</div>=0A=
		//	</div>=0A=
=0A=
=0A=
		var objBody =3D document.getElementsByTagName("body").item(0);=0A=
		=0A=
		var objOverlay =3D document.createElement("div");=0A=
		objOverlay.setAttribute('id','overlay');=0A=
		objOverlay.style.display =3D 'none';=0A=
		objOverlay.onclick =3D function() { myLightbox.end(); }=0A=
		objBody.appendChild(objOverlay);=0A=
		=0A=
		var objLightbox =3D document.createElement("div");=0A=
		objLightbox.setAttribute('id','lightbox');=0A=
		objLightbox.style.display =3D 'none';=0A=
		objLightbox.onclick =3D function(e) {	// close Lightbox is user clicks =
shadow overlay=0A=
			if (!e) var e =3D window.event;=0A=
			var clickObj =3D Event.element(e).id;=0A=
			if ( clickObj =3D=3D 'lightbox') {=0A=
				myLightbox.end();=0A=
			}=0A=
		};=0A=
		objBody.appendChild(objLightbox);=0A=
			=0A=
		var objOuterImageContainer =3D document.createElement("div");=0A=
		objOuterImageContainer.setAttribute('id','outerImageContainer');=0A=
		objLightbox.appendChild(objOuterImageContainer);=0A=
=0A=
		// When Lightbox starts it will resize itself from 250 by 250 to the =
current image dimension.=0A=
		// If animations are turned off, it will be hidden as to prevent a =
flicker of a=0A=
		// white 250 by 250 box.=0A=
		if(animate){=0A=
			Element.setWidth('outerImageContainer', 250);=0A=
			Element.setHeight('outerImageContainer', 250);		=09
		} else {=0A=
			Element.setWidth('outerImageContainer', 1);=0A=
			Element.setHeight('outerImageContainer', 1);			=0A=
		}=0A=
=0A=
		var objImageContainer =3D document.createElement("div");=0A=
		objImageContainer.setAttribute('id','imageContainer');=0A=
		objOuterImageContainer.appendChild(objImageContainer);=0A=
	=0A=
		var objLightboxImage =3D document.createElement("img");=0A=
		objLightboxImage.setAttribute('id','lightboxImage');=0A=
		objImageContainer.appendChild(objLightboxImage);=0A=
	=0A=
		var objHoverNav =3D document.createElement("div");=0A=
		objHoverNav.setAttribute('id','hoverNav');=0A=
		objImageContainer.appendChild(objHoverNav);=0A=
	=0A=
		var objPrevLink =3D document.createElement("a");=0A=
		objPrevLink.setAttribute('id','prevLink');=0A=
		objPrevLink.setAttribute('href','#');=0A=
		objHoverNav.appendChild(objPrevLink);=0A=
		=0A=
		var objNextLink =3D document.createElement("a");=0A=
		objNextLink.setAttribute('id','nextLink');=0A=
		objNextLink.setAttribute('href','#');=0A=
		objHoverNav.appendChild(objNextLink);=0A=
	=0A=
		var objLoading =3D document.createElement("div");=0A=
		objLoading.setAttribute('id','loading');=0A=
		objImageContainer.appendChild(objLoading);=0A=
	=0A=
		var objLoadingLink =3D document.createElement("a");=0A=
		objLoadingLink.setAttribute('id','loadingLink');=0A=
		objLoadingLink.setAttribute('href','#');=0A=
		objLoadingLink.onclick =3D function() { myLightbox.end(); return =
false; }=0A=
		objLoading.appendChild(objLoadingLink);=0A=
	=0A=
		var objLoadingImage =3D document.createElement("img");=0A=
		objLoadingImage.setAttribute('src', fileLoadingImage);=0A=
		objLoadingLink.appendChild(objLoadingImage);=0A=
=0A=
		var objImageDataContainer =3D document.createElement("div");=0A=
		objImageDataContainer.setAttribute('id','imageDataContainer');=0A=
		objLightbox.appendChild(objImageDataContainer);=0A=
=0A=
		var objImageData =3D document.createElement("div");=0A=
		objImageData.setAttribute('id','imageData');=0A=
		objImageDataContainer.appendChild(objImageData);=0A=
	=0A=
		var objImageDetails =3D document.createElement("div");=0A=
		objImageDetails.setAttribute('id','imageDetails');=0A=
		objImageData.appendChild(objImageDetails);=0A=
	=0A=
		var objCaption =3D document.createElement("span");=0A=
		objCaption.setAttribute('id','caption');=0A=
		objImageDetails.appendChild(objCaption);=0A=
	=0A=
		var objNumberDisplay =3D document.createElement("span");=0A=
		objNumberDisplay.setAttribute('id','numberDisplay');=0A=
		objImageDetails.appendChild(objNumberDisplay);=0A=
		=0A=
		var objBottomNav =3D document.createElement("div");=0A=
		objBottomNav.setAttribute('id','bottomNav');=0A=
		objImageData.appendChild(objBottomNav);=0A=
	=0A=
		var objBottomNavCloseLink =3D document.createElement("a");=0A=
		objBottomNavCloseLink.setAttribute('id','bottomNavClose');=0A=
		objBottomNavCloseLink.setAttribute('href','#');=0A=
		objBottomNavCloseLink.onclick =3D function() { myLightbox.end(); =
return false; }=0A=
		objBottomNav.appendChild(objBottomNavCloseLink);=0A=
	=0A=
		var objBottomNavCloseImage =3D document.createElement("img");=0A=
		objBottomNavCloseImage.setAttribute('src', fileBottomNavCloseImage);=0A=
		objBottomNavCloseLink.appendChild(objBottomNavCloseImage);=0A=
	},=0A=
	=0A=
	//=0A=
	//	start()=0A=
	//	Display overlay and lightbox. If image is part of a set, add =
siblings to imageArray.=0A=
	//=0A=
	start: function(imageLink) {	=0A=
=0A=
		hideSelectBoxes();=0A=
		hideFlash();=0A=
=0A=
		// stretch overlay to fill page and fade in=0A=
		var arrayPageSize =3D getPageSize();=0A=
		Element.setHeight('overlay', arrayPageSize[1]);=0A=
=0A=
		new Effect.Appear('overlay', { duration: overlayDuration, from: 0.0, =
to: overlayOpacity });=0A=
=0A=
		imageArray =3D [];=0A=
		imageNum =3D 0;		=0A=
=0A=
		if (!document.getElementsByTagName){ return; }=0A=
		var anchors =3D document.getElementsByTagName( imageLink.tagName);=0A=
=0A=
		// if image is NOT part of a set..=0A=
		if((imageLink.getAttribute('rel') =3D=3D 'lightbox')){=0A=
			// add single image to imageArray=0A=
			imageArray.push(new Array(imageLink.getAttribute('href'), =
imageLink.getAttribute('title')));			=0A=
		} else {=0A=
		// if image is part of a set..=0A=
=0A=
			// loop through anchors, find other images in set, and add them to =
imageArray=0A=
			for (var i=3D0; i<anchors.length; i++){=0A=
				var anchor =3D anchors[i];=0A=
				if (anchor.getAttribute('href') && (anchor.getAttribute('rel') =
=3D=3D imageLink.getAttribute('rel'))){=0A=
					imageArray.push(new Array(anchor.getAttribute('href'), =
anchor.getAttribute('title')));=0A=
				}=0A=
			}=0A=
			imageArray.removeDuplicates();=0A=
			while(imageArray[imageNum][0] !=3D imageLink.getAttribute('href')) { =
imageNum++;}=0A=
		}=0A=
=0A=
		// calculate top offset for the lightbox and display =0A=
		var arrayPageScroll =3D getPageScroll();=0A=
		var lightboxTop =3D arrayPageScroll[1] + (arrayPageSize[3] / 10);=0A=
=0A=
		Element.setTop('lightbox', lightboxTop);=0A=
		Element.show('lightbox');=0A=
		=0A=
		this.changeImage(imageNum);=0A=
	},=0A=
=0A=
	//=0A=
	//	changeImage()=0A=
	//	Hide most elements and preload image in preparation for resizing =
image container.=0A=
	//=0A=
	changeImage: function(imageNum) {	=0A=
		=0A=
		activeImage =3D imageNum;	// update global var=0A=
=0A=
		// hide elements during transition=0A=
		if(animate){ Element.show('loading');}=0A=
		Element.hide('lightboxImage');=0A=
		Element.hide('hoverNav');=0A=
		Element.hide('prevLink');=0A=
		Element.hide('nextLink');=0A=
		Element.hide('imageDataContainer');=0A=
		Element.hide('numberDisplay');		=0A=
		=0A=
		imgPreloader =3D new Image();=0A=
		=0A=
		// once image is preloaded, resize image container=0A=
		imgPreloader.onload=3Dfunction(){=0A=
			Element.setSrc('lightboxImage', imageArray[activeImage][0]);=0A=
			myLightbox.resizeImageContainer(imgPreloader.width, =
imgPreloader.height);=0A=
			=0A=
			imgPreloader.onload=3Dfunction(){};	//	clear onLoad, IE behaves =
irratically with animated gifs otherwise =0A=
		}=0A=
		imgPreloader.src =3D imageArray[activeImage][0];=0A=
	},=0A=
=0A=
	//=0A=
	//	resizeImageContainer()=0A=
	//=0A=
	resizeImageContainer: function( imgWidth, imgHeight) {=0A=
=0A=
		// get curren width and height=0A=
		this.widthCurrent =3D Element.getWidth('outerImageContainer');=0A=
		this.heightCurrent =3D Element.getHeight('outerImageContainer');=0A=
=0A=
		// get new width and height=0A=
		var widthNew =3D (imgWidth  + (borderSize * 2));=0A=
		var heightNew =3D (imgHeight  + (borderSize * 2));=0A=
=0A=
		// scalars based on change from old to new=0A=
		this.xScale =3D ( widthNew / this.widthCurrent) * 100;=0A=
		this.yScale =3D ( heightNew / this.heightCurrent) * 100;=0A=
=0A=
		// calculate size difference between new and old image, and resize if =
necessary=0A=
		wDiff =3D this.widthCurrent - widthNew;=0A=
		hDiff =3D this.heightCurrent - heightNew;=0A=
=0A=
		if(!( hDiff =3D=3D 0)){ new Effect.Scale('outerImageContainer', =
this.yScale, {scaleX: false, duration: resizeDuration, queue: 'front'}); =
}=0A=
		if(!( wDiff =3D=3D 0)){ new Effect.Scale('outerImageContainer', =
this.xScale, {scaleY: false, delay: resizeDuration, duration: =
resizeDuration}); }=0A=
=0A=
		// if new and old image are same size and no scaling transition is =
necessary, =0A=
		// do a quick pause to prevent image flicker.=0A=
		if((hDiff =3D=3D 0) && (wDiff =3D=3D 0)){=0A=
			if (navigator.appVersion.indexOf("MSIE")!=3D-1){ pause(250); } else { =
pause(100);} =0A=
		}=0A=
=0A=
		Element.setHeight('prevLink', imgHeight);=0A=
		Element.setHeight('nextLink', imgHeight);=0A=
		Element.setWidth( 'imageDataContainer', widthNew);=0A=
=0A=
		this.showImage();=0A=
	},=0A=
	=0A=
	//=0A=
	//	showImage()=0A=
	//	Display image and begin preloading neighbors.=0A=
	//=0A=
	showImage: function(){=0A=
		Element.hide('loading');=0A=
		new Effect.Appear('lightboxImage', { duration: resizeDuration, queue: =
'end', afterFinish: function(){	myLightbox.updateDetails(); } });=0A=
		this.preloadNeighborImages();=0A=
	},=0A=
=0A=
	//=0A=
	//	updateDetails()=0A=
	//	Display caption, image number, and bottom nav.=0A=
	//=0A=
	updateDetails: function() {=0A=
	=0A=
		Element.show('caption');=0A=
		Element.setInnerHTML( 'caption', imageArray[activeImage][1]);=0A=
		=0A=
		// if image is part of set display 'Image x of x' =0A=
		if(imageArray.length > 1){=0A=
			Element.show('numberDisplay');=0A=
			Element.setInnerHTML( 'numberDisplay', "Image " + eval(activeImage + =
1) + " of " + imageArray.length);=0A=
		}=0A=
=0A=
		new Effect.Parallel(=0A=
			[ new Effect.SlideDown( 'imageDataContainer', { sync: true, duration: =
resizeDuration, from: 0.0, to: 1.0 }), =0A=
			  new Effect.Appear('imageDataContainer', { sync: true, duration: =
resizeDuration }) ], =0A=
			{ duration: resizeDuration, afterFinish: function() {=0A=
				// update overlay size and update nav=0A=
				var arrayPageSize =3D getPageSize();=0A=
				Element.setHeight('overlay', arrayPageSize[1]);=0A=
				myLightbox.updateNav();=0A=
				}=0A=
			} =0A=
		);=0A=
	},=0A=
=0A=
	//=0A=
	//	updateNav()=0A=
	//	Display appropriate previous and next hover navigation.=0A=
	//=0A=
	updateNav: function() {=0A=
=0A=
		Element.show('hoverNav');				=0A=
=0A=
		// if not first image in set, display prev image button=0A=
		if(activeImage !=3D 0){=0A=
			Element.show('prevLink');=0A=
			document.getElementById('prevLink').onclick =3D function() {=0A=
				myLightbox.changeImage(activeImage - 1); return false;=0A=
			}=0A=
		}=0A=
=0A=
		// if not last image in set, display next image button=0A=
		if(activeImage !=3D (imageArray.length - 1)){=0A=
			Element.show('nextLink');=0A=
			document.getElementById('nextLink').onclick =3D function() {=0A=
				myLightbox.changeImage(activeImage + 1); return false;=0A=
			}=0A=
		}=0A=
		=0A=
		this.enableKeyboardNav();=0A=
	},=0A=
=0A=
	//=0A=
	//	enableKeyboardNav()=0A=
	//=0A=
	enableKeyboardNav: function() {=0A=
		document.onkeydown =3D this.keyboardAction; =0A=
	},=0A=
=0A=
	//=0A=
	//	disableKeyboardNav()=0A=
	//=0A=
	disableKeyboardNav: function() {=0A=
		document.onkeydown =3D '';=0A=
	},=0A=
=0A=
	//=0A=
	//	keyboardAction()=0A=
	//=0A=
	keyboardAction: function(e) {=0A=
		if (e =3D=3D null) { // ie=0A=
			keycode =3D event.keyCode;=0A=
			escapeKey =3D 27;=0A=
		} else { // mozilla=0A=
			keycode =3D e.keyCode;=0A=
			escapeKey =3D e.DOM_VK_ESCAPE;=0A=
		}=0A=
=0A=
		key =3D String.fromCharCode(keycode).toLowerCase();=0A=
		=0A=
		if((key =3D=3D 'x') || (key =3D=3D 'o') || (key =3D=3D 'c') || =
(keycode =3D=3D escapeKey)){	// close lightbox=0A=
			myLightbox.end();=0A=
		} else if((key =3D=3D 'p') || (keycode =3D=3D 37)){	// display =
previous image=0A=
			if(activeImage !=3D 0){=0A=
				myLightbox.disableKeyboardNav();=0A=
				myLightbox.changeImage(activeImage - 1);=0A=
			}=0A=
		} else if((key =3D=3D 'n') || (keycode =3D=3D 39)){	// display next =
image=0A=
			if(activeImage !=3D (imageArray.length - 1)){=0A=
				myLightbox.disableKeyboardNav();=0A=
				myLightbox.changeImage(activeImage + 1);=0A=
			}=0A=
		}=0A=
=0A=
	},=0A=
=0A=
	//=0A=
	//	preloadNeighborImages()=0A=
	//	Preload previous and next images.=0A=
	//=0A=
	preloadNeighborImages: function(){=0A=
=0A=
		if((imageArray.length - 1) > activeImage){=0A=
			preloadNextImage =3D new Image();=0A=
			preloadNextImage.src =3D imageArray[activeImage + 1][0];=0A=
		}=0A=
		if(activeImage > 0){=0A=
			preloadPrevImage =3D new Image();=0A=
			preloadPrevImage.src =3D imageArray[activeImage - 1][0];=0A=
		}=0A=
	=0A=
	},=0A=
=0A=
	//=0A=
	//	end()=0A=
	//=0A=
	end: function() {=0A=
		this.disableKeyboardNav();=0A=
		Element.hide('lightbox');=0A=
		new Effect.Fade('overlay', { duration: overlayDuration});=0A=
		showSelectBoxes();=0A=
		showFlash();=0A=
	}=0A=
}=0A=
=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
=0A=
//=0A=
// getPageScroll()=0A=
// Returns array with x,y page scroll values.=0A=
// Core code from - quirksmode.org=0A=
//=0A=
function getPageScroll(){=0A=
=0A=
	var yScroll;=0A=
=0A=
	if (self.pageYOffset) {=0A=
		yScroll =3D self.pageYOffset;=0A=
	} else if (document.documentElement && =
document.documentElement.scrollTop){	 // Explorer 6 Strict=0A=
		yScroll =3D document.documentElement.scrollTop;=0A=
	} else if (document.body) {// all other Explorers=0A=
		yScroll =3D document.body.scrollTop;=0A=
	}=0A=
=0A=
	arrayPageScroll =3D new Array('',yScroll) =0A=
	return arrayPageScroll;=0A=
}=0A=
=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
=0A=
//=0A=
// getPageSize()=0A=
// Returns array with page width, height and window width, height=0A=
// Core code from - quirksmode.org=0A=
// Edit for Firefox by pHaez=0A=
//=0A=
function getPageSize(){=0A=
	=0A=
	var xScroll, yScroll;=0A=
	=0A=
	if (window.innerHeight && window.scrollMaxY) {	=0A=
		xScroll =3D document.body.scrollWidth;=0A=
		yScroll =3D window.innerHeight + window.scrollMaxY;=0A=
	} else if (document.body.scrollHeight > document.body.offsetHeight){ // =
all but Explorer Mac=0A=
		xScroll =3D document.body.scrollWidth;=0A=
		yScroll =3D document.body.scrollHeight;=0A=
	} else { // Explorer Mac...would also work in Explorer 6 Strict, =
Mozilla and Safari=0A=
		xScroll =3D document.body.offsetWidth;=0A=
		yScroll =3D document.body.offsetHeight;=0A=
	}=0A=
	=0A=
	var windowWidth, windowHeight;=0A=
	if (self.innerHeight) {	// all except Explorer=0A=
		windowWidth =3D self.innerWidth;=0A=
		windowHeight =3D self.innerHeight;=0A=
	} else if (document.documentElement && =
document.documentElement.clientHeight) { // Explorer 6 Strict Mode=0A=
		windowWidth =3D document.documentElement.clientWidth;=0A=
		windowHeight =3D document.documentElement.clientHeight;=0A=
	} else if (document.body) { // other Explorers=0A=
		windowWidth =3D document.body.clientWidth;=0A=
		windowHeight =3D document.body.clientHeight;=0A=
	}	=0A=
	=0A=
	// for small pages with total height less then height of the viewport=0A=
	if(yScroll < windowHeight){=0A=
		pageHeight =3D windowHeight;=0A=
	} else { =0A=
		pageHeight =3D yScroll;=0A=
	}=0A=
=0A=
	// for small pages with total width less then width of the viewport=0A=
	if(xScroll < windowWidth){	=0A=
		pageWidth =3D windowWidth;=0A=
	} else {=0A=
		pageWidth =3D xScroll;=0A=
	}=0A=
=0A=
	arrayPageSize =3D new =
Array(pageWidth,pageHeight,windowWidth,windowHeight) =0A=
	return arrayPageSize;=0A=
}=0A=
=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
=0A=
//=0A=
// getKey(key)=0A=
// Gets keycode. If 'x' is pressed then it hides the lightbox.=0A=
//=0A=
function getKey(e){=0A=
	if (e =3D=3D null) { // ie=0A=
		keycode =3D event.keyCode;=0A=
	} else { // mozilla=0A=
		keycode =3D e.which;=0A=
	}=0A=
	key =3D String.fromCharCode(keycode).toLowerCase();=0A=
	=0A=
	if(key =3D=3D 'x'){=0A=
	}=0A=
}=0A=
=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
=0A=
//=0A=
// listenKey()=0A=
//=0A=
function listenKey () {	document.onkeypress =3D getKey; }=0A=
	=0A=
// ---------------------------------------------------=0A=
=0A=
function showSelectBoxes(){=0A=
	var selects =3D document.getElementsByTagName("select");=0A=
	for (i =3D 0; i !=3D selects.length; i++) {=0A=
		selects[i].style.visibility =3D "visible";=0A=
	}=0A=
}=0A=
=0A=
// ---------------------------------------------------=0A=
=0A=
function hideSelectBoxes(){=0A=
	var selects =3D document.getElementsByTagName("select");=0A=
	for (i =3D 0; i !=3D selects.length; i++) {=0A=
		selects[i].style.visibility =3D "hidden";=0A=
	}=0A=
}=0A=
=0A=
// ---------------------------------------------------=0A=
=0A=
function showFlash(){=0A=
	var flashObjects =3D document.getElementsByTagName("object");=0A=
	for (i =3D 0; i < flashObjects.length; i++) {=0A=
		flashObjects[i].style.visibility =3D "visible";=0A=
	}=0A=
=0A=
	var flashEmbeds =3D document.getElementsByTagName("embed");=0A=
	for (i =3D 0; i < flashEmbeds.length; i++) {=0A=
		flashEmbeds[i].style.visibility =3D "visible";=0A=
	}=0A=
}=0A=
=0A=
// ---------------------------------------------------=0A=
=0A=
function hideFlash(){=0A=
	var flashObjects =3D document.getElementsByTagName("object");=0A=
	for (i =3D 0; i < flashObjects.length; i++) {=0A=
		flashObjects[i].style.visibility =3D "hidden";=0A=
	}=0A=
=0A=
	var flashEmbeds =3D document.getElementsByTagName("embed");=0A=
	for (i =3D 0; i < flashEmbeds.length; i++) {=0A=
		flashEmbeds[i].style.visibility =3D "hidden";=0A=
	}=0A=
=0A=
}=0A=
=0A=
=0A=
// ---------------------------------------------------=0A=
=0A=
//=0A=
// pause(numberMillis)=0A=
// Pauses code execution for specified time. Uses busy code, not good.=0A=
// Help from Ran Bar-On [ran2103@gmail.com]=0A=
//=0A=
=0A=
function pause(ms){=0A=
	var date =3D new Date();=0A=
	curDate =3D null;=0A=
	do{var curDate =3D new Date();}=0A=
	while( curDate - date < ms);=0A=
}=0A=
/*=0A=
function pause(numberMillis) {=0A=
	var curently =3D new Date().getTime() + sender;=0A=
	while (new Date().getTime();	=0A=
}=0A=
*/=0A=
// ---------------------------------------------------=0A=
=0A=
=0A=
=0A=
function initLightbox() { myLightbox =3D new Lightbox(); }=0A=
Event.observe(window, 'load', initLightbox, false);=0A=

------=_NextPart_000_0000_01CAB98C.1FFF1050--
